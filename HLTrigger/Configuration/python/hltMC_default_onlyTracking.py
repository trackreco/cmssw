# hltGetConfiguration /dev/CMSSW_14_1_0/GRun/V50 --path MC_ReducedIterativeTracking_v22 --cff --eras Run3_2024 --mc --unprescale --eras Run3_2024 --l1-emulator uGT --l1 L1Menu_Collisions2024_v1_3_0_xml

# /dev/CMSSW_14_1_0/GRun/V50 (CMSSW_14_1_1)

import FWCore.ParameterSet.Config as cms

fragment = cms.ProcessFragment( "HLT" )

fragment.load("Configuration.StandardSequences.Accelerators_cff")

fragment.HLTConfigVersion = cms.PSet(
  tableName = cms.string("/dev/CMSSW_14_1_0/GRun/V50")
)

fragment.HLTGroupedCkfTrajectoryBuilderP5 = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTCkfBaseTrajectoryFilterP5" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  seedAs5DHit = cms.bool( False ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 1 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESChi2MeasurementEstimatorForP5" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
fragment.HLTCkfBaseTrajectoryFilterP5 = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minHitsAtHighEta = cms.int32( 5 ),
  minPt = cms.double( 0.5 ),
  maxConsecLostHits = cms.int32( 3 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  highEtaSwitch = cms.double( 5.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 4 )
)
fragment.HLTCkfBaseTrajectoryFilter_block = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minHitsAtHighEta = cms.int32( 5 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  highEtaSwitch = cms.double( 5.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
fragment.HLTIter4PSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter4PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 1 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTIter0GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  keepOriginalIfRebuildFails = cms.bool( False ),
  lockHits = cms.bool( True ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0PSetTrajectoryFilterIT" ) ),
  maxCand = cms.int32( 2 ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  intermediateCleaning = cms.bool( True ),
  bestHitOnly = cms.bool( True ),
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0PSetTrajectoryFilterIT" ) ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTIter4PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 6 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetPvClusterComparerForIT = cms.PSet( 
  track_chi2_max = cms.double( 20.0 ),
  track_pt_max = cms.double( 20.0 ),
  track_prob_min = cms.double( -1.0 ),
  track_pt_min = cms.double( 1.0 )
)
fragment.HLTPSetMuonCkfTrajectoryBuilder = cms.PSet( 
  rescaleErrorIfFail = cms.double( 1.0 ),
  ComponentType = cms.string( "MuonCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonCkfTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( False ),
  propagatorProximity = cms.string( "SteppingHelixPropagatorAny" ),
  updator = cms.string( "hltESPKFUpdator" ),
  deltaEta = cms.double( -1.0 ),
  useSeedLayer = cms.bool( False ),
  deltaPhi = cms.double( -1.0 ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTIter0HighPtTkMuPSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetPvClusterComparerForBTag = cms.PSet( 
  track_chi2_max = cms.double( 20.0 ),
  track_pt_max = cms.double( 20.0 ),
  track_prob_min = cms.double( -1.0 ),
  track_pt_min = cms.double( 0.1 )
)
fragment.HLTIter2GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  keepOriginalIfRebuildFails = cms.bool( False ),
  lockHits = cms.bool( True ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2PSetTrajectoryFilterIT" ) ),
  maxCand = cms.int32( 2 ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  bestHitOnly = cms.bool( True ),
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2PSetTrajectoryFilterIT" ) ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTSiStripClusterChargeCutTight = cms.PSet(  value = cms.double( 1945.0 ) )
fragment.HLTPSetMuonTrackingRegionBuilder8356 = cms.PSet( 
  Rescale_Dz = cms.double( 3.0 ),
  Pt_fixed = cms.bool( False ),
  Eta_fixed = cms.bool( False ),
  Eta_min = cms.double( 0.1 ),
  DeltaZ = cms.double( 15.9 ),
  maxRegions = cms.int32( 2 ),
  EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
  UseVertex = cms.bool( False ),
  Z_fixed = cms.bool( True ),
  PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
  PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
  Rescale_phi = cms.double( 3.0 ),
  DeltaEta = cms.double( 0.2 ),
  precise = cms.bool( True ),
  OnDemand = cms.int32( -1 ),
  EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
  MeasurementTrackerName = cms.InputTag( "hltESPMeasurementTracker" ),
  vertexCollection = cms.InputTag( "pixelVertices" ),
  Pt_min = cms.double( 1.5 ),
  beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
  Phi_fixed = cms.bool( False ),
  DeltaR = cms.double( 0.2 ),
  input = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
  DeltaPhi = cms.double( 0.2 ),
  Phi_min = cms.double( 0.1 ),
  Rescale_eta = cms.double( 3.0 )
)
fragment.HLTIter2PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetMuTrackJpsiTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuTrackJpsiTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  maxCand = cms.int32( 1 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTPSetTrajectoryBuilderForGsfElectrons = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 90.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "hltESPBwdElectronPropagator" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTrajectoryFilterForElectrons" ) ),
  propagatorAlong = cms.string( "hltESPFwdElectronPropagator" ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator2000" ),
  intermediateCleaning = cms.bool( False ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTSiStripClusterChargeCutNone = cms.PSet(  value = cms.double( -1.0 ) )
fragment.HLTPSetMuonCkfTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( -1 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTIter1PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.2 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTSeedFromProtoTracks = cms.PSet( 
  TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
  SeedMomentumForBOFF = cms.double( 5.0 ),
  propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  forceKinematicWithRegionDirection = cms.bool( False ),
  magneticField = cms.string( "ParabolicMf" ),
  OriginTransverseErrorMultiplier = cms.double( 1.0 ),
  ComponentName = cms.string( "SeedFromConsecutiveHitsCreator" ),
  MinOneOverPtError = cms.double( 1.0 )
)
fragment.HLTPSetMuTrackJpsiTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 10.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 8 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTIter0PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTSeedFromConsecutiveHitsCreator = cms.PSet( 
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  SeedMomentumForBOFF = cms.double( 5.0 ),
  propagator = cms.string( "PropagatorWithMaterial" ),
  forceKinematicWithRegionDirection = cms.bool( False ),
  magneticField = cms.string( "" ),
  OriginTransverseErrorMultiplier = cms.double( 1.0 ),
  ComponentName = cms.string( "SeedFromConsecutiveHitsCreator" ),
  MinOneOverPtError = cms.double( 1.0 )
)
fragment.HLTSiStripClusterChargeCutForHI = cms.PSet(  value = cms.double( 2069.0 ) )
fragment.HLTPSetTrajectoryFilterForElectrons = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 2.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( -1 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( -1 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTIter0HighPtTkMuPSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0HighPtTkMuPSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTIter1GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter1PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter1PSetTrajectoryFilterIT" ) )
)
fragment.HLTIter0IterL3MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 1.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  minNrOfHitsForRebuild = cms.int32( 2 ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 10.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTIter0IterL3FromL1MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 1.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  minNrOfHitsForRebuild = cms.int32( 2 ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 10.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetCkfBaseTrajectoryFilter_block = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTSiStripClusterChargeCutLoose = cms.PSet(  value = cms.double( 1620.0 ) )
fragment.HLTPSetInitialStepTrajectoryFilterShapePreSplittingPPOnAA = cms.PSet( 
  ComponentType = cms.string( "StripSubClusterShapeTrajectoryFilter" ),
  subclusterCutSN = cms.double( 12.0 ),
  trimMaxADC = cms.double( 30.0 ),
  seedCutMIPs = cms.double( 0.35 ),
  subclusterCutMIPs = cms.double( 0.45 ),
  subclusterWindow = cms.double( 0.7 ),
  maxNSat = cms.uint32( 3 ),
  trimMaxFracNeigh = cms.double( 0.25 ),
  maxTrimmedSizeDiffNeg = cms.double( 1.0 ),
  seedCutSN = cms.double( 7.0 ),
  layerMask = cms.PSet( 
    TOB = cms.bool( False ),
    TIB = cms.vuint32( 1, 2 ),
    TID = cms.vuint32( 1, 2 ),
    TEC = cms.bool( False )
  ),
  maxTrimmedSizeDiffPos = cms.double( 0.7 ),
  trimMaxFracTotal = cms.double( 0.15 )
)
fragment.HLTPSetInitialStepTrajectoryFilterBasePreSplittingForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  maxCCCLostHits = cms.int32( 0 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetInitialStepTrajectoryBuilderPreSplittingForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterPreSplittingForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTPSetInitialStepTrajectoryFilterPreSplittingForFullTrackingPPOnAA = cms.PSet( 
  ComponentType = cms.string( "CompositeTrajectoryFilter" ),
  filters = cms.VPSet( 
    cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterBasePreSplittingForFullTrackingPPOnAA" )    ),
    cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterShapePreSplittingPPOnAA" )    )
  )
)
fragment.HLTPSetInitialStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  maxCCCLostHits = cms.int32( 0 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetInitialStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 1 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTPSetLowPtQuadStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetLowPtQuadStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtQuadStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTPSetHighPtTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetHighPtTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetHighPtTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTPSetLowPtTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 2.8 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetLowPtTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTPSetDetachedQuadStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetDetachedTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetPixelPairStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetPixelPairStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( False ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPPixelPairStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairStepTrajectoryFilterInOutForFullTrackingPPOnAA" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTPSetMixedTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.4 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetPixelLessStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetPixelLessStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelLessStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPPixelLessStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTPSetTobTecStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetTobTecStepInOutTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetTobTecStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( False ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPTobTecStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepInOutTrajectoryFilterForFullTrackingPPOnAA" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTPSetJetCoreStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetJetCoreStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetJetCoreStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 50 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTPSetPixelPairStepTrajectoryFilterInOutForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetMixedTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialForMixedStepOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMixedTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialForMixedStep" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPMixedTripletStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTPSetDetachedQuadStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedQuadStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTPSetDetachedTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTPSetInitialStepTrajectoryFilterForDmesonPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  maxCCCLostHits = cms.int32( 0 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minPt = cms.double( 3.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetInitialStepTrajectoryBuilderForDmesonPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterForDmesonPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 1 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTPSetLowPtQuadStepTrajectoryFilterForDmesonPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 2.8 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetLowPtQuadStepTrajectoryBuilderForDmesonPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtQuadStepTrajectoryFilterForDmesonPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
fragment.HLTPSetHighPtTripletStepTrajectoryFilterForDmesonPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 3.5 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
fragment.HLTPSetHighPtTripletStepTrajectoryBuilderForDmesonPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetHighPtTripletStepTrajectoryFilterForDmesonPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
fragment.streams = cms.PSet( 
  ALCALowPtJet = cms.vstring( 'AlCaLowPtJet' ),
  ALCALumiPixelsCountsExpress = cms.vstring( 'AlCaLumiPixelsCountsExpress' ),
  ALCALumiPixelsCountsPrompt = cms.vstring( 'AlCaLumiPixelsCountsPrompt' ),
  ALCAP0 = cms.vstring( 'AlCaP0' ),
  ALCAPHISYM = cms.vstring( 'AlCaPhiSym' ),
  ALCAPPSExpress = cms.vstring( 'AlCaPPSExpress' ),
  ALCAPPSPrompt = cms.vstring( 'AlCaPPSPrompt' ),
  Calibration = cms.vstring( 'TestEnablesEcalHcal' ),
  DQM = cms.vstring( 'OnlineMonitor' ),
  DQMCalibration = cms.vstring( 'TestEnablesEcalHcalDQM' ),
  DQMEventDisplay = cms.vstring( 'EventDisplay' ),
  DQMGPUvsCPU = cms.vstring( 'DQMGPUvsCPU' ),
  DQMOnlineBeamspot = cms.vstring( 'DQMOnlineBeamspot' ),
  DQMPPSRandom = cms.vstring( 'DQMPPSRandom' ),
  EcalCalibration = cms.vstring( 'EcalLaser' ),
  Express = cms.vstring( 'ExpressPhysics' ),
  ExpressAlignment = cms.vstring( 'ExpressAlignment' ),
  HLTMonitor = cms.vstring( 'HLTMonitor' ),
  NanoDST = cms.vstring( 'L1Accept' ),
  ParkingDoubleMuonLowMass0 = cms.vstring( 'ParkingDoubleMuonLowMass0',
    'ParkingDoubleMuonLowMass1' ),
  ParkingDoubleMuonLowMass1 = cms.vstring( 'ParkingDoubleMuonLowMass2',
    'ParkingDoubleMuonLowMass3' ),
  ParkingDoubleMuonLowMass2 = cms.vstring( 'ParkingDoubleMuonLowMass4',
    'ParkingDoubleMuonLowMass5' ),
  ParkingDoubleMuonLowMass3 = cms.vstring( 'ParkingDoubleMuonLowMass6',
    'ParkingDoubleMuonLowMass7' ),
  ParkingHH = cms.vstring( 'ParkingHH' ),
  ParkingLLP = cms.vstring( 'ParkingLLP' ),
  ParkingSingleMuon0 = cms.vstring( 'ParkingSingleMuon0' ),
  ParkingSingleMuon1 = cms.vstring( 'ParkingSingleMuon1' ),
  ParkingSingleMuon10 = cms.vstring( 'ParkingSingleMuon10' ),
  ParkingSingleMuon11 = cms.vstring( 'ParkingSingleMuon11' ),
  ParkingSingleMuon2 = cms.vstring( 'ParkingSingleMuon2' ),
  ParkingSingleMuon3 = cms.vstring( 'ParkingSingleMuon3' ),
  ParkingSingleMuon4 = cms.vstring( 'ParkingSingleMuon4' ),
  ParkingSingleMuon5 = cms.vstring( 'ParkingSingleMuon5' ),
  ParkingSingleMuon6 = cms.vstring( 'ParkingSingleMuon6' ),
  ParkingSingleMuon7 = cms.vstring( 'ParkingSingleMuon7' ),
  ParkingSingleMuon8 = cms.vstring( 'ParkingSingleMuon8' ),
  ParkingSingleMuon9 = cms.vstring( 'ParkingSingleMuon9' ),
  ParkingVBF0 = cms.vstring( 'ParkingVBF0',
    'ParkingVBF1' ),
  ParkingVBF1 = cms.vstring( 'ParkingVBF2',
    'ParkingVBF3' ),
  ParkingVBF2 = cms.vstring( 'ParkingVBF4',
    'ParkingVBF5' ),
  ParkingVBF3 = cms.vstring( 'ParkingVBF6',
    'ParkingVBF7' ),
  PhysicsCommissioning = cms.vstring( 'Commissioning',
    'Cosmics',
    'HLTPhysics',
    'HcalNZS',
    'MonteCarlo',
    'NoBPTX',
    'ZeroBias' ),
  PhysicsDispJetBTagMuEGTau = cms.vstring( 'BTagMu',
    'DisplacedJet',
    'MuonEG',
    'Tau' ),
  PhysicsEGamma0 = cms.vstring( 'EGamma0' ),
  PhysicsEGamma1 = cms.vstring( 'EGamma1' ),
  PhysicsHLTPhysics0 = cms.vstring( 'EphemeralHLTPhysics0',
    'EphemeralHLTPhysics1' ),
  PhysicsHLTPhysics1 = cms.vstring( 'EphemeralHLTPhysics2',
    'EphemeralHLTPhysics3' ),
  PhysicsHLTPhysics2 = cms.vstring( 'EphemeralHLTPhysics4',
    'EphemeralHLTPhysics5' ),
  PhysicsHLTPhysics3 = cms.vstring( 'EphemeralHLTPhysics6',
    'EphemeralHLTPhysics7' ),
  PhysicsJetMET0 = cms.vstring( 'JetMET0' ),
  PhysicsJetMET1 = cms.vstring( 'JetMET1' ),
  PhysicsMuon0 = cms.vstring( 'Muon0' ),
  PhysicsMuon1 = cms.vstring( 'Muon1' ),
  PhysicsScoutingPFMonitor = cms.vstring( 'ScoutingPFMonitor' ),
  PhysicsZeroBias0 = cms.vstring( 'EphemeralZeroBias0',
    'EphemeralZeroBias1' ),
  PhysicsZeroBias1 = cms.vstring( 'EphemeralZeroBias2',
    'EphemeralZeroBias3' ),
  PhysicsZeroBias2 = cms.vstring( 'EphemeralZeroBias4',
    'EphemeralZeroBias5' ),
  PhysicsZeroBias3 = cms.vstring( 'EphemeralZeroBias6',
    'EphemeralZeroBias7' ),
  RPCMON = cms.vstring( 'RPCMonitor' ),
  ScoutingPF = cms.vstring( 'ScoutingPFRun3' )
)
fragment.datasets = cms.PSet( 
  AlCaLowPtJet = cms.vstring( 'AlCa_AK8PFJet40_v27',
    'AlCa_PFJet40_v32' ),
  AlCaLumiPixelsCountsExpress = cms.vstring( 'AlCa_LumiPixelsCounts_Random_v10' ),
  AlCaLumiPixelsCountsPrompt = cms.vstring( 'AlCa_LumiPixelsCounts_Random_v10',
    'AlCa_LumiPixelsCounts_ZeroBias_v12' ),
  AlCaP0 = cms.vstring( 'AlCa_EcalEtaEBonly_v25',
    'AlCa_EcalEtaEEonly_v25',
    'AlCa_EcalPi0EBonly_v25',
    'AlCa_EcalPi0EEonly_v25' ),
  AlCaPPSExpress = cms.vstring( 'HLT_PPSMaxTracksPerArm1_v9',
    'HLT_PPSMaxTracksPerRP4_v9' ),
  AlCaPPSPrompt = cms.vstring( 'HLT_PPSMaxTracksPerArm1_v9',
    'HLT_PPSMaxTracksPerRP4_v9' ),
  AlCaPhiSym = cms.vstring( 'AlCa_EcalPhiSym_v20' ),
  BTagMu = cms.vstring( 'HLT_BTagMu_AK4DiJet110_Mu5_v25',
    'HLT_BTagMu_AK4DiJet170_Mu5_v24',
    'HLT_BTagMu_AK4DiJet20_Mu5_v25',
    'HLT_BTagMu_AK4DiJet40_Mu5_v25',
    'HLT_BTagMu_AK4DiJet70_Mu5_v25',
    'HLT_BTagMu_AK4Jet300_Mu5_v24',
    'HLT_BTagMu_AK8DiJet170_Mu5_v21',
    'HLT_BTagMu_AK8Jet170_DoubleMu5_v14',
    'HLT_BTagMu_AK8Jet300_Mu5_v24' ),
  Commissioning = cms.vstring( 'HLT_IsoTrackHB_v14',
    'HLT_IsoTrackHE_v14',
    'HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_v9',
    'HLT_PFJet40_GPUvsCPU_v7' ),
  Cosmics = cms.vstring( 'HLT_L1SingleMuCosmics_v8' ),
  DQMGPUvsCPU = cms.vstring( 'DQM_EcalReconstruction_v12',
    'DQM_HcalReconstruction_v10',
    'DQM_PixelReconstruction_v12' ),
  DQMOnlineBeamspot = cms.vstring( 'HLT_HT300_Beamspot_v23',
    'HLT_ZeroBias_Beamspot_v16' ),
  DQMPPSRandom = cms.vstring( 'HLT_PPSRandom_v1' ),
  DisplacedJet = cms.vstring( 'HLT_CaloMET60_DTCluster50_v11',
    'HLT_CaloMET60_DTClusterNoMB1S50_v11',
    'HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v11',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_v11',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_v11',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_v11',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_v11',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v11',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v11',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_v11',
    'HLT_HT200_L1SingleLLPJet_PFJet60_NeutralHadronFrac0p7_v6',
    'HLT_HT200_L1SingleLLPJet_PFJet60_NeutralHadronFrac0p8_v6',
    'HLT_HT240_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v8',
    'HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v11',
    'HLT_HT280_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v8',
    'HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_v11',
    'HLT_HT350_DelayedJet40_SingleDelay3nsInclusive_v7',
    'HLT_HT350_DelayedJet40_SingleDelay3p25nsInclusive_v7',
    'HLT_HT350_DelayedJet40_SingleDelay3p5nsInclusive_v7',
    'HLT_HT350_v7',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v23',
    'HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_v11',
    'HLT_HT425_v19',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_v10',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_v11',
    'HLT_HT430_DelayedJet40_DoubleDelay0p75nsTrackless_v7',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_v11',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsTrackless_v7',
    'HLT_HT430_DelayedJet40_DoubleDelay1p25nsInclusive_v7',
    'HLT_HT430_DelayedJet40_DoubleDelay1p5nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_v11',
    'HLT_HT430_DelayedJet40_SingleDelay1p25nsTrackless_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsTrackless_v7',
    'HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_v11',
    'HLT_HT430_DelayedJet40_SingleDelay2p25nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay2p5nsInclusive_v7',
    'HLT_HT550_DisplacedDijet60_Inclusive_v23',
    'HLT_L1MET_DTCluster50_v11',
    'HLT_L1MET_DTClusterNoMB1S50_v11',
    'HLT_L1Mu6HT240_v9',
    'HLT_L1SingleLLPJet_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p5nsTrackless_v9',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p75nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1nsTrackless_v9',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p75nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5nsTrackless_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p75nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_SingleDelay3nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p5nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p75nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_SingleDelay4nsInclusive_v7',
    'HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_v11',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_v11',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_v11',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_v11',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_v11',
    'HLT_Mu6HT240_DisplacedDijet45_Inclusive0PtrkShortSig5_v11',
    'HLT_Mu6HT240_DisplacedDijet50_Inclusive0PtrkShortSig5_v11',
    'HLT_PFJet200_TimeGt2p5ns_v10',
    'HLT_PFJet200_TimeLtNeg2p5ns_v10' ),
  EGamma0 = cms.vstring( 'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v14',
    'HLT_DiPhoton10Time1ns_v10',
    'HLT_DiPhoton10Time1p2ns_v10',
    'HLT_DiPhoton10Time1p4ns_v10',
    'HLT_DiPhoton10Time1p6ns_v10',
    'HLT_DiPhoton10Time1p8ns_v10',
    'HLT_DiPhoton10Time2ns_v10',
    'HLT_DiPhoton10_CaloIdL_v10',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v24',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v10',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v10',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v10',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v10',
    'HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v10',
    'HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v10',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v11',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v11',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v23',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v23',
    'HLT_DiphotonMVA14p25_Mass90_v3',
    'HLT_DiphotonMVA14p25_Tight_Mass90_v3',
    'HLT_DoubleEle10_eta1p22_mMax6_v10',
    'HLT_DoubleEle25_CaloIdL_MW_v15',
    'HLT_DoubleEle27_CaloIdL_MW_v15',
    'HLT_DoubleEle33_CaloIdL_MW_v28',
    'HLT_DoubleEle6p5_eta1p22_mMax6_v10',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v32',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v32',
    'HLT_DoubleEle8_eta1p22_mMax6_v10',
    'HLT_DoublePhoton33_CaloIdL_v17',
    'HLT_DoublePhoton70_v17',
    'HLT_DoublePhoton85_v25',
    'HLT_ECALHT800_v20',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v25',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v30',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v18',
    'HLT_Ele14_eta2p5_IsoVVVL_Gsf_PFHT200_PNetBTag0p53_v5',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v28',
    'HLT_Ele15_IsoVVVL_PFHT450_v28',
    'HLT_Ele15_IsoVVVL_PFHT600_v32',
    'HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v19',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v28',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v30',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v30',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v29',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v29',
    'HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v13',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Loose_eta2p3_CrossL1_v6',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Medium_eta2p3_CrossL1_v6',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Tight_eta2p3_CrossL1_v6',
    'HLT_Ele28_HighEta_SC20_Mass55_v23',
    'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v25',
    'HLT_Ele30_WPTight_Gsf_v11',
    'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v25',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v19',
    'HLT_Ele32_WPTight_Gsf_v25',
    'HLT_Ele35_WPTight_Gsf_v19',
    'HLT_Ele38_WPTight_Gsf_v19',
    'HLT_Ele40_WPTight_Gsf_v19',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v9',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v12',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v9',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v9',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v12',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v30',
    'HLT_Ele50_IsoVVVL_PFHT450_v28',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v28',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v30',
    'HLT_Photon100EBHE10_v12',
    'HLT_Photon110EB_TightID_TightIso_AK8CaloJet30_v3',
    'HLT_Photon110EB_TightID_TightIso_AK8PFJet30_v5',
    'HLT_Photon110EB_TightID_TightIso_CaloJet30_v3',
    'HLT_Photon110EB_TightID_TightIso_PFJet30_v6',
    'HLT_Photon110EB_TightID_TightIso_v12',
    'HLT_Photon120_R9Id90_HE10_IsoM_v24',
    'HLT_Photon120_v23',
    'HLT_Photon150_v17',
    'HLT_Photon165_R9Id90_HE10_IsoM_v25',
    'HLT_Photon175_v25',
    'HLT_Photon200_v24',
    'HLT_Photon20_HoverELoose_v20',
    'HLT_Photon300_NoHE_v23',
    'HLT_Photon30EB_TightID_TightIso_v12',
    'HLT_Photon30_HoverELoose_v20',
    'HLT_Photon32_OneProng32_M50To105_v10',
    'HLT_Photon33_v15',
    'HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v8',
    'HLT_Photon35_TwoProngs35_v13',
    'HLT_Photon40EB_TightID_TightIso_v3',
    'HLT_Photon40EB_v3',
    'HLT_Photon45EB_TightID_TightIso_v3',
    'HLT_Photon45EB_v3',
    'HLT_Photon50EB_TightID_TightIso_AK8CaloJet30_v3',
    'HLT_Photon50EB_TightID_TightIso_AK8PFJet30_v5',
    'HLT_Photon50EB_TightID_TightIso_CaloJet30_v3',
    'HLT_Photon50EB_TightID_TightIso_PFJet30_v6',
    'HLT_Photon50EB_TightID_TightIso_v8',
    'HLT_Photon50EB_v4',
    'HLT_Photon50_R9Id90_HE10_IsoM_v24',
    'HLT_Photon50_TimeGt2p5ns_v7',
    'HLT_Photon50_TimeLtNeg2p5ns_v7',
    'HLT_Photon50_v23',
    'HLT_Photon55EB_TightID_TightIso_v4',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v10',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v10',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v10',
    'HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v9',
    'HLT_Photon75EB_TightID_TightIso_v8',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v17',
    'HLT_Photon75_R9Id90_HE10_IsoM_v24',
    'HLT_Photon75_v23',
    'HLT_Photon90EB_TightID_TightIso_v8',
    'HLT_Photon90_R9Id90_HE10_IsoM_v24',
    'HLT_Photon90_v23',
    'HLT_SingleEle8_SingleEGL1_v9',
    'HLT_SingleEle8_v9' ),
  EGamma1 = cms.vstring( 'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v14',
    'HLT_DiPhoton10Time1ns_v10',
    'HLT_DiPhoton10Time1p2ns_v10',
    'HLT_DiPhoton10Time1p4ns_v10',
    'HLT_DiPhoton10Time1p6ns_v10',
    'HLT_DiPhoton10Time1p8ns_v10',
    'HLT_DiPhoton10Time2ns_v10',
    'HLT_DiPhoton10_CaloIdL_v10',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v24',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v10',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v10',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v10',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v10',
    'HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v10',
    'HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v10',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v11',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v11',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v23',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v23',
    'HLT_DiphotonMVA14p25_Mass90_v3',
    'HLT_DiphotonMVA14p25_Tight_Mass90_v3',
    'HLT_DoubleEle10_eta1p22_mMax6_v10',
    'HLT_DoubleEle25_CaloIdL_MW_v15',
    'HLT_DoubleEle27_CaloIdL_MW_v15',
    'HLT_DoubleEle33_CaloIdL_MW_v28',
    'HLT_DoubleEle6p5_eta1p22_mMax6_v10',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v32',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v32',
    'HLT_DoubleEle8_eta1p22_mMax6_v10',
    'HLT_DoublePhoton33_CaloIdL_v17',
    'HLT_DoublePhoton70_v17',
    'HLT_DoublePhoton85_v25',
    'HLT_ECALHT800_v20',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v25',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v30',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v18',
    'HLT_Ele14_eta2p5_IsoVVVL_Gsf_PFHT200_PNetBTag0p53_v5',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v28',
    'HLT_Ele15_IsoVVVL_PFHT450_v28',
    'HLT_Ele15_IsoVVVL_PFHT600_v32',
    'HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v19',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v28',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v30',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v30',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v29',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v29',
    'HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v13',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Loose_eta2p3_CrossL1_v6',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Medium_eta2p3_CrossL1_v6',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Tight_eta2p3_CrossL1_v6',
    'HLT_Ele28_HighEta_SC20_Mass55_v23',
    'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v25',
    'HLT_Ele30_WPTight_Gsf_v11',
    'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v25',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v19',
    'HLT_Ele32_WPTight_Gsf_v25',
    'HLT_Ele35_WPTight_Gsf_v19',
    'HLT_Ele38_WPTight_Gsf_v19',
    'HLT_Ele40_WPTight_Gsf_v19',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v9',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v12',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v9',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v9',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v12',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v30',
    'HLT_Ele50_IsoVVVL_PFHT450_v28',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v28',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v30',
    'HLT_Photon100EBHE10_v12',
    'HLT_Photon110EB_TightID_TightIso_AK8CaloJet30_v3',
    'HLT_Photon110EB_TightID_TightIso_AK8PFJet30_v5',
    'HLT_Photon110EB_TightID_TightIso_CaloJet30_v3',
    'HLT_Photon110EB_TightID_TightIso_PFJet30_v6',
    'HLT_Photon110EB_TightID_TightIso_v12',
    'HLT_Photon120_R9Id90_HE10_IsoM_v24',
    'HLT_Photon120_v23',
    'HLT_Photon150_v17',
    'HLT_Photon165_R9Id90_HE10_IsoM_v25',
    'HLT_Photon175_v25',
    'HLT_Photon200_v24',
    'HLT_Photon20_HoverELoose_v20',
    'HLT_Photon300_NoHE_v23',
    'HLT_Photon30EB_TightID_TightIso_v12',
    'HLT_Photon30_HoverELoose_v20',
    'HLT_Photon32_OneProng32_M50To105_v10',
    'HLT_Photon33_v15',
    'HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v8',
    'HLT_Photon35_TwoProngs35_v13',
    'HLT_Photon40EB_TightID_TightIso_v3',
    'HLT_Photon40EB_v3',
    'HLT_Photon45EB_TightID_TightIso_v3',
    'HLT_Photon45EB_v3',
    'HLT_Photon50EB_TightID_TightIso_AK8CaloJet30_v3',
    'HLT_Photon50EB_TightID_TightIso_AK8PFJet30_v5',
    'HLT_Photon50EB_TightID_TightIso_CaloJet30_v3',
    'HLT_Photon50EB_TightID_TightIso_PFJet30_v6',
    'HLT_Photon50EB_TightID_TightIso_v8',
    'HLT_Photon50EB_v4',
    'HLT_Photon50_R9Id90_HE10_IsoM_v24',
    'HLT_Photon50_TimeGt2p5ns_v7',
    'HLT_Photon50_TimeLtNeg2p5ns_v7',
    'HLT_Photon50_v23',
    'HLT_Photon55EB_TightID_TightIso_v4',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v10',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v10',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v10',
    'HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v9',
    'HLT_Photon75EB_TightID_TightIso_v8',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v17',
    'HLT_Photon75_R9Id90_HE10_IsoM_v24',
    'HLT_Photon75_v23',
    'HLT_Photon90EB_TightID_TightIso_v8',
    'HLT_Photon90_R9Id90_HE10_IsoM_v24',
    'HLT_Photon90_v23',
    'HLT_SingleEle8_SingleEGL1_v9',
    'HLT_SingleEle8_v9' ),
  EcalLaser = cms.vstring( 'HLT_EcalCalibration_v4' ),
  EphemeralHLTPhysics0 = cms.vstring( 'HLT_EphemeralPhysics_v9' ),
  EphemeralHLTPhysics1 = cms.vstring( 'HLT_EphemeralPhysics_v9' ),
  EphemeralHLTPhysics2 = cms.vstring( 'HLT_EphemeralPhysics_v9' ),
  EphemeralHLTPhysics3 = cms.vstring( 'HLT_EphemeralPhysics_v9' ),
  EphemeralHLTPhysics4 = cms.vstring( 'HLT_EphemeralPhysics_v9' ),
  EphemeralHLTPhysics5 = cms.vstring( 'HLT_EphemeralPhysics_v9' ),
  EphemeralHLTPhysics6 = cms.vstring( 'HLT_EphemeralPhysics_v9' ),
  EphemeralHLTPhysics7 = cms.vstring( 'HLT_EphemeralPhysics_v9' ),
  EphemeralZeroBias0 = cms.vstring( 'HLT_EphemeralZeroBias_v9' ),
  EphemeralZeroBias1 = cms.vstring( 'HLT_EphemeralZeroBias_v9' ),
  EphemeralZeroBias2 = cms.vstring( 'HLT_EphemeralZeroBias_v9' ),
  EphemeralZeroBias3 = cms.vstring( 'HLT_EphemeralZeroBias_v9' ),
  EphemeralZeroBias4 = cms.vstring( 'HLT_EphemeralZeroBias_v9' ),
  EphemeralZeroBias5 = cms.vstring( 'HLT_EphemeralZeroBias_v9' ),
  EphemeralZeroBias6 = cms.vstring( 'HLT_EphemeralZeroBias_v9' ),
  EphemeralZeroBias7 = cms.vstring( 'HLT_EphemeralZeroBias_v9' ),
  EventDisplay = cms.vstring( 'HLT_DoublePhoton85_v25',
    'HLT_PFJet500_v33',
    'HLT_Physics_v14' ),
  ExpressAlignment = cms.vstring( 'HLT_HT300_Beamspot_v23',
    'HLT_ZeroBias_Beamspot_v16' ),
  ExpressPhysics = cms.vstring( 'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v29',
    'HLT_IsoMu20_v27',
    'HLT_IsoMu24_v25',
    'HLT_IsoMu27_v28',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v17',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v27',
    'HLT_Physics_v14',
    'HLT_Random_v3',
    'HLT_ZeroBias_Alignment_v8',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v12',
    'HLT_ZeroBias_IsolatedBunches_v12',
    'HLT_ZeroBias_v13' ),
  HLTMonitor = cms.vstring( 'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v29',
    'HLT_Ele32_WPTight_Gsf_v25',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v9',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v9',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v12',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v23',
    'HLT_HT550_DisplacedDijet60_Inclusive_v23',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v9',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v9',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v12',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v27',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PNet2BTagMean0p50_v9',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v13',
    'HLT_PFHT510_v29',
    'HLT_PFJet260_v32',
    'HLT_PFJet320_v32',
    'HLT_PFMET130_PFMHT130_IDTight_v32',
    'HLT_PFMET140_PFMHT140_IDTight_v32' ),
  HLTPhysics = cms.vstring( 'HLT_Physics_v14' ),
  HcalNZS = cms.vstring( 'HLT_HcalNZS_v21',
    'HLT_HcalPhiSym_v23' ),
  JetMET0 = cms.vstring( 'HLT_AK8DiPFJet250_250_SoftDropMass40_v6',
    'HLT_AK8DiPFJet250_250_SoftDropMass50_v6',
    'HLT_AK8DiPFJet260_260_SoftDropMass30_v6',
    'HLT_AK8DiPFJet260_260_SoftDropMass40_v6',
    'HLT_AK8DiPFJet270_270_SoftDropMass30_v6',
    'HLT_AK8DiPFJet280_280_SoftDropMass30_v12',
    'HLT_AK8DiPFJet290_290_SoftDropMass30_v6',
    'HLT_AK8PFJet140_v27',
    'HLT_AK8PFJet200_v27',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v9',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p53_v9',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p55_v9',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p60_v9',
    'HLT_AK8PFJet220_SoftDropMass40_v13',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v9',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v9',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p03_v9',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p05_v9',
    'HLT_AK8PFJet230_SoftDropMass40_v13',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p06_v9',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p10_v9',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p03_v9',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p05_v9',
    'HLT_AK8PFJet260_v28',
    'HLT_AK8PFJet275_Nch40_v6',
    'HLT_AK8PFJet275_Nch45_v6',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p06_v9',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p10_v9',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p03_v9',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p05_v9',
    'HLT_AK8PFJet320_v28',
    'HLT_AK8PFJet380_SoftDropMass30_v6',
    'HLT_AK8PFJet400_SoftDropMass30_v6',
    'HLT_AK8PFJet400_v28',
    'HLT_AK8PFJet40_v28',
    'HLT_AK8PFJet425_SoftDropMass30_v6',
    'HLT_AK8PFJet450_SoftDropMass30_v6',
    'HLT_AK8PFJet450_v28',
    'HLT_AK8PFJet500_v28',
    'HLT_AK8PFJet550_v23',
    'HLT_AK8PFJet60_v27',
    'HLT_AK8PFJet80_v28',
    'HLT_AK8PFJetFwd140_v26',
    'HLT_AK8PFJetFwd200_v26',
    'HLT_AK8PFJetFwd260_v27',
    'HLT_AK8PFJetFwd320_v27',
    'HLT_AK8PFJetFwd400_v27',
    'HLT_AK8PFJetFwd40_v27',
    'HLT_AK8PFJetFwd450_v27',
    'HLT_AK8PFJetFwd500_v27',
    'HLT_AK8PFJetFwd60_v26',
    'HLT_AK8PFJetFwd80_v26',
    'HLT_CaloJet500_NoJetID_v22',
    'HLT_CaloJet550_NoJetID_v17',
    'HLT_CaloMET350_NotCleaned_v14',
    'HLT_CaloMET90_NotCleaned_v14',
    'HLT_CaloMHT90_v14',
    'HLT_DiPFJetAve100_HFJEC_v29',
    'HLT_DiPFJetAve140_v25',
    'HLT_DiPFJetAve160_HFJEC_v28',
    'HLT_DiPFJetAve180_PPSMatch_Xi0p3_QuadJet_Max2ProtPerRP_v6',
    'HLT_DiPFJetAve200_v25',
    'HLT_DiPFJetAve220_HFJEC_v28',
    'HLT_DiPFJetAve260_HFJEC_v11',
    'HLT_DiPFJetAve260_v26',
    'HLT_DiPFJetAve300_HFJEC_v28',
    'HLT_DiPFJetAve320_v26',
    'HLT_DiPFJetAve400_v26',
    'HLT_DiPFJetAve40_v26',
    'HLT_DiPFJetAve500_v26',
    'HLT_DiPFJetAve60_HFJEC_v27',
    'HLT_DiPFJetAve60_v26',
    'HLT_DiPFJetAve80_HFJEC_v29',
    'HLT_DiPFJetAve80_v26',
    'HLT_DoublePFJets100_PNetBTag_0p11_v6',
    'HLT_DoublePFJets116MaxDeta1p6_PNet2BTag_0p11_v6',
    'HLT_DoublePFJets128MaxDeta1p6_PNet2BTag_0p11_v6',
    'HLT_DoublePFJets200_PNetBTag_0p11_v6',
    'HLT_DoublePFJets350_PNetBTag_0p11_v6',
    'HLT_DoublePFJets40_PNetBTag_0p11_v6',
    'HLT_L1AXOVTight_v4',
    'HLT_L1ETMHadSeeds_v10',
    'HLT_MET105_IsoTrk50_v19',
    'HLT_MET120_IsoTrk50_v19',
    'HLT_Mu12_DoublePFJets100_PNetBTag_0p11_v6',
    'HLT_Mu12_DoublePFJets200_PNetBTag_0p11_v6',
    'HLT_Mu12_DoublePFJets350_PNetBTag_0p11_v6',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_PNet2BTag_0p11_v6',
    'HLT_Mu12_DoublePFJets40_PNetBTag_0p11_v6',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_PNet2BTag_0p11_v6',
    'HLT_Mu12eta2p3_PFJet40_v13',
    'HLT_Mu12eta2p3_v13',
    'HLT_PFHT1050_v30',
    'HLT_PFHT180_v29',
    'HLT_PFHT250_v29',
    'HLT_PFHT350_v31',
    'HLT_PFHT370_v29',
    'HLT_PFHT430_v29',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v24',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v24',
    'HLT_PFHT510_v29',
    'HLT_PFHT590_v29',
    'HLT_PFHT680_v29',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v24',
    'HLT_PFHT780_v29',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v24',
    'HLT_PFHT890_v29',
    'HLT_PFJet110_v12',
    'HLT_PFJet140_v31',
    'HLT_PFJet200_v31',
    'HLT_PFJet260_v32',
    'HLT_PFJet320_v32',
    'HLT_PFJet400_v32',
    'HLT_PFJet40_v33',
    'HLT_PFJet450_v33',
    'HLT_PFJet500_v33',
    'HLT_PFJet550_v23',
    'HLT_PFJet60_v33',
    'HLT_PFJet80_v33',
    'HLT_PFJetFwd140_v30',
    'HLT_PFJetFwd200_v30',
    'HLT_PFJetFwd260_v31',
    'HLT_PFJetFwd320_v31',
    'HLT_PFJetFwd400_v31',
    'HLT_PFJetFwd40_v31',
    'HLT_PFJetFwd450_v31',
    'HLT_PFJetFwd500_v31',
    'HLT_PFJetFwd60_v31',
    'HLT_PFJetFwd80_v30',
    'HLT_PFMET105_IsoTrk50_v13',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v21',
    'HLT_PFMET120_PFMHT120_IDTight_v32',
    'HLT_PFMET130_PFMHT130_IDTight_v32',
    'HLT_PFMET140_PFMHT140_IDTight_v32',
    'HLT_PFMET200_BeamHaloCleaned_v21',
    'HLT_PFMET200_NotCleaned_v21',
    'HLT_PFMET250_NotCleaned_v21',
    'HLT_PFMET300_NotCleaned_v21',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v12',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v12',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v21',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v32',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v12',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v31',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v12',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v31',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v23',
    'HLT_PFMETTypeOne200_BeamHaloCleaned_v21' ),
  JetMET1 = cms.vstring( 'HLT_AK8DiPFJet250_250_SoftDropMass40_v6',
    'HLT_AK8DiPFJet250_250_SoftDropMass50_v6',
    'HLT_AK8DiPFJet260_260_SoftDropMass30_v6',
    'HLT_AK8DiPFJet260_260_SoftDropMass40_v6',
    'HLT_AK8DiPFJet270_270_SoftDropMass30_v6',
    'HLT_AK8DiPFJet280_280_SoftDropMass30_v12',
    'HLT_AK8DiPFJet290_290_SoftDropMass30_v6',
    'HLT_AK8PFJet140_v27',
    'HLT_AK8PFJet200_v27',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v9',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p53_v9',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p55_v9',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p60_v9',
    'HLT_AK8PFJet220_SoftDropMass40_v13',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v9',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v9',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p03_v9',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p05_v9',
    'HLT_AK8PFJet230_SoftDropMass40_v13',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p06_v9',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p10_v9',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p03_v9',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p05_v9',
    'HLT_AK8PFJet260_v28',
    'HLT_AK8PFJet275_Nch40_v6',
    'HLT_AK8PFJet275_Nch45_v6',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p06_v9',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p10_v9',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p03_v9',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p05_v9',
    'HLT_AK8PFJet320_v28',
    'HLT_AK8PFJet380_SoftDropMass30_v6',
    'HLT_AK8PFJet400_SoftDropMass30_v6',
    'HLT_AK8PFJet400_v28',
    'HLT_AK8PFJet40_v28',
    'HLT_AK8PFJet425_SoftDropMass30_v6',
    'HLT_AK8PFJet450_SoftDropMass30_v6',
    'HLT_AK8PFJet450_v28',
    'HLT_AK8PFJet500_v28',
    'HLT_AK8PFJet550_v23',
    'HLT_AK8PFJet60_v27',
    'HLT_AK8PFJet80_v28',
    'HLT_AK8PFJetFwd140_v26',
    'HLT_AK8PFJetFwd200_v26',
    'HLT_AK8PFJetFwd260_v27',
    'HLT_AK8PFJetFwd320_v27',
    'HLT_AK8PFJetFwd400_v27',
    'HLT_AK8PFJetFwd40_v27',
    'HLT_AK8PFJetFwd450_v27',
    'HLT_AK8PFJetFwd500_v27',
    'HLT_AK8PFJetFwd60_v26',
    'HLT_AK8PFJetFwd80_v26',
    'HLT_CaloJet500_NoJetID_v22',
    'HLT_CaloJet550_NoJetID_v17',
    'HLT_CaloMET350_NotCleaned_v14',
    'HLT_CaloMET90_NotCleaned_v14',
    'HLT_CaloMHT90_v14',
    'HLT_DiPFJetAve100_HFJEC_v29',
    'HLT_DiPFJetAve140_v25',
    'HLT_DiPFJetAve160_HFJEC_v28',
    'HLT_DiPFJetAve180_PPSMatch_Xi0p3_QuadJet_Max2ProtPerRP_v6',
    'HLT_DiPFJetAve200_v25',
    'HLT_DiPFJetAve220_HFJEC_v28',
    'HLT_DiPFJetAve260_HFJEC_v11',
    'HLT_DiPFJetAve260_v26',
    'HLT_DiPFJetAve300_HFJEC_v28',
    'HLT_DiPFJetAve320_v26',
    'HLT_DiPFJetAve400_v26',
    'HLT_DiPFJetAve40_v26',
    'HLT_DiPFJetAve500_v26',
    'HLT_DiPFJetAve60_HFJEC_v27',
    'HLT_DiPFJetAve60_v26',
    'HLT_DiPFJetAve80_HFJEC_v29',
    'HLT_DiPFJetAve80_v26',
    'HLT_DoublePFJets100_PNetBTag_0p11_v6',
    'HLT_DoublePFJets116MaxDeta1p6_PNet2BTag_0p11_v6',
    'HLT_DoublePFJets128MaxDeta1p6_PNet2BTag_0p11_v6',
    'HLT_DoublePFJets200_PNetBTag_0p11_v6',
    'HLT_DoublePFJets350_PNetBTag_0p11_v6',
    'HLT_DoublePFJets40_PNetBTag_0p11_v6',
    'HLT_L1AXOVTight_v4',
    'HLT_L1ETMHadSeeds_v10',
    'HLT_MET105_IsoTrk50_v19',
    'HLT_MET120_IsoTrk50_v19',
    'HLT_Mu12_DoublePFJets100_PNetBTag_0p11_v6',
    'HLT_Mu12_DoublePFJets200_PNetBTag_0p11_v6',
    'HLT_Mu12_DoublePFJets350_PNetBTag_0p11_v6',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_PNet2BTag_0p11_v6',
    'HLT_Mu12_DoublePFJets40_PNetBTag_0p11_v6',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_PNet2BTag_0p11_v6',
    'HLT_Mu12eta2p3_PFJet40_v13',
    'HLT_Mu12eta2p3_v13',
    'HLT_PFHT1050_v30',
    'HLT_PFHT180_v29',
    'HLT_PFHT250_v29',
    'HLT_PFHT350_v31',
    'HLT_PFHT370_v29',
    'HLT_PFHT430_v29',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v24',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v24',
    'HLT_PFHT510_v29',
    'HLT_PFHT590_v29',
    'HLT_PFHT680_v29',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v24',
    'HLT_PFHT780_v29',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v24',
    'HLT_PFHT890_v29',
    'HLT_PFJet110_v12',
    'HLT_PFJet140_v31',
    'HLT_PFJet200_v31',
    'HLT_PFJet260_v32',
    'HLT_PFJet320_v32',
    'HLT_PFJet400_v32',
    'HLT_PFJet40_v33',
    'HLT_PFJet450_v33',
    'HLT_PFJet500_v33',
    'HLT_PFJet550_v23',
    'HLT_PFJet60_v33',
    'HLT_PFJet80_v33',
    'HLT_PFJetFwd140_v30',
    'HLT_PFJetFwd200_v30',
    'HLT_PFJetFwd260_v31',
    'HLT_PFJetFwd320_v31',
    'HLT_PFJetFwd400_v31',
    'HLT_PFJetFwd40_v31',
    'HLT_PFJetFwd450_v31',
    'HLT_PFJetFwd500_v31',
    'HLT_PFJetFwd60_v31',
    'HLT_PFJetFwd80_v30',
    'HLT_PFMET105_IsoTrk50_v13',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v21',
    'HLT_PFMET120_PFMHT120_IDTight_v32',
    'HLT_PFMET130_PFMHT130_IDTight_v32',
    'HLT_PFMET140_PFMHT140_IDTight_v32',
    'HLT_PFMET200_BeamHaloCleaned_v21',
    'HLT_PFMET200_NotCleaned_v21',
    'HLT_PFMET250_NotCleaned_v21',
    'HLT_PFMET300_NotCleaned_v21',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v12',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v12',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v21',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v32',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v12',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v31',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v12',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v31',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v23',
    'HLT_PFMETTypeOne200_BeamHaloCleaned_v21' ),
  L1Accept = cms.vstring( 'DST_Physics_v16',
    'DST_ZeroBias_v11' ),
  MonteCarlo = cms.vstring( 'MC_AK4CaloJetsFromPV_v18',
    'MC_AK4CaloJets_v19',
    'MC_AK4PFJetPNet_v5',
    'MC_AK4PFJets_v29',
    'MC_AK8CaloHT_v18',
    'MC_AK8PFHT_v28',
    'MC_AK8PFJetPNet_v5',
    'MC_AK8PFJets_v29',
    'MC_CaloHT_v18',
    'MC_CaloMET_JetIdCleaned_v19',
    'MC_CaloMET_v18',
    'MC_CaloMHT_v18',
    'MC_Diphoton10_10_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass10_v23',
    'MC_DoubleEle5_CaloIdL_MW_v26',
    'MC_DoubleMuNoFiltersNoVtx_v17',
    'MC_DoubleMu_TrkIsoVVL_DZ_v23',
    'MC_Egamma_Open_Unseeded_v8',
    'MC_Egamma_Open_v8',
    'MC_Ele15_Ele10_CaloIdL_TrackIdL_IsoVL_DZ_v25',
    'MC_Ele5_WPTight_Gsf_v18',
    'MC_IsoMu_v27',
    'MC_PFHT_v28',
    'MC_PFMET_v29',
    'MC_PFMHT_v28',
    'MC_PFScouting_v6',
    'MC_ReducedIterativeTracking_v22' ),
  Muon0 = cms.vstring( 'HLT_CascadeMu100_v13',
    'HLT_CscCluster100_Ele5_v4',
    'HLT_CscCluster100_Mu5_v6',
    'HLT_CscCluster100_PNetTauhPFJet10_Loose_v6',
    'HLT_CscCluster50_Photon20Unseeded_v4',
    'HLT_CscCluster50_Photon30Unseeded_v4',
    'HLT_CscCluster_Loose_v10',
    'HLT_CscCluster_Medium_v10',
    'HLT_CscCluster_Tight_v10',
    'HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v8',
    'HLT_DoubleCscCluster100_v7',
    'HLT_DoubleCscCluster75_v7',
    'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v11',
    'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v12',
    'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v11',
    'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v11',
    'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v11',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v11',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v11',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v11',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v11',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v11',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v11',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v11',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v11',
    'HLT_DoubleL2Mu50_v11',
    'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v10',
    'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v10',
    'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v11',
    'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v10',
    'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v10',
    'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v10',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_noDCA_v6',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_v6',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v22',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v22',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v22',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v22',
    'HLT_DoubleMu43NoFiltersNoVtx_v14',
    'HLT_DoubleMu48NoFiltersNoVtx_v14',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v20',
    'HLT_HighPtTkMu100_v12',
    'HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_v13',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Loose_eta2p3_CrossL1_v6',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Medium_eta2p3_CrossL1_v6',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Tight_eta2p3_CrossL1_v6',
    'HLT_IsoMu20_v27',
    'HLT_IsoMu24_OneProng32_v9',
    'HLT_IsoMu24_TwoProngs35_v13',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v13',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v13',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v12',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v12',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v12',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v12',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v13',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v12',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_PNet1Tauh0p50_v6',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_v6',
    'HLT_IsoMu24_eta2p1_PFHT250_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Loose_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Medium_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Tight_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet20_eta2p2_SingleL1_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet60_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet75_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Loose_eta2p3_CrossL1_ETau_Monitoring_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_eta2p3_CrossL1_ETau_Monitoring_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_eta2p3_CrossL1_ETau_Monitoring_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet45_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_SinglePFJet25_PNet1Tauh0p50_v6',
    'HLT_IsoMu24_eta2p1_v27',
    'HLT_IsoMu24_v25',
    'HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v8',
    'HLT_IsoMu27_v28',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v9',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v12',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v9',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v9',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v12',
    'HLT_IsoTrk200_L1SingleMuShower_v4',
    'HLT_IsoTrk400_L1SingleMuShower_v4',
    'HLT_L1CSCShower_DTCluster50_v10',
    'HLT_L1CSCShower_DTCluster75_v10',
    'HLT_L2Mu50NoVtx_3Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v4',
    'HLT_L2Mu50NoVtx_3Cha_VetoL3Mu0DxyMax1cm_v4',
    'HLT_L3Mu30NoVtx_DxyMin0p01cm_v3',
    'HLT_L3Mu50NoVtx_DxyMin0p01cm_v3',
    'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v10',
    'HLT_Mu12_IsoVVL_PFHT150_PNetBTag0p53_v5',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v27',
    'HLT_Mu15_IsoVVVL_PFHT450_v27',
    'HLT_Mu15_IsoVVVL_PFHT600_v31',
    'HLT_Mu15_v15',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v17',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8CaloJet30_v5',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8PFJet30_v5',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_CaloJet30_v5',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_PFJet30_v6',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v17',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v27',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v26',
    'HLT_Mu17_TrkIsoVVL_v25',
    'HLT_Mu17_v25',
    'HLT_Mu18_Mu9_SameSign_v16',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v15',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v15',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v15',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v15',
    'HLT_Mu19_TrkIsoVVL_v16',
    'HLT_Mu19_v16',
    'HLT_Mu20_v24',
    'HLT_Mu27_v25',
    'HLT_Mu37_TkMu27_v17',
    'HLT_Mu3_PFJet40_v28',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v14',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v14',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v14',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v14',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v14',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v14',
    'HLT_Mu50_IsoVVVL_PFHT450_v27',
    'HLT_Mu50_L1SingleMuShower_v11',
    'HLT_Mu50_v25',
    'HLT_Mu55_v15',
    'HLT_Mu8_TrkIsoVVL_v24',
    'HLT_Mu8_v24',
    'HLT_TripleMu_10_5_5_DZ_v22',
    'HLT_TripleMu_12_10_5_v22',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v15',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v20',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v17' ),
  Muon1 = cms.vstring( 'HLT_CascadeMu100_v13',
    'HLT_CscCluster100_Ele5_v4',
    'HLT_CscCluster100_Mu5_v6',
    'HLT_CscCluster100_PNetTauhPFJet10_Loose_v6',
    'HLT_CscCluster50_Photon20Unseeded_v4',
    'HLT_CscCluster50_Photon30Unseeded_v4',
    'HLT_CscCluster_Loose_v10',
    'HLT_CscCluster_Medium_v10',
    'HLT_CscCluster_Tight_v10',
    'HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v8',
    'HLT_DoubleCscCluster100_v7',
    'HLT_DoubleCscCluster75_v7',
    'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v11',
    'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v12',
    'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v11',
    'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v11',
    'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v11',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v11',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v11',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v11',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v11',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v11',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v11',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v11',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v11',
    'HLT_DoubleL2Mu50_v11',
    'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v10',
    'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v10',
    'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v11',
    'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v10',
    'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v10',
    'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v10',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_noDCA_v6',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_v6',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v22',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v22',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v22',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v22',
    'HLT_DoubleMu43NoFiltersNoVtx_v14',
    'HLT_DoubleMu48NoFiltersNoVtx_v14',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v20',
    'HLT_HighPtTkMu100_v12',
    'HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_v13',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Loose_eta2p3_CrossL1_v6',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Medium_eta2p3_CrossL1_v6',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Tight_eta2p3_CrossL1_v6',
    'HLT_IsoMu20_v27',
    'HLT_IsoMu24_OneProng32_v9',
    'HLT_IsoMu24_TwoProngs35_v13',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v13',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v13',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v12',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v12',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v12',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v12',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v13',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v12',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_PNet1Tauh0p50_v6',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_v6',
    'HLT_IsoMu24_eta2p1_PFHT250_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Loose_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Medium_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Tight_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet20_eta2p2_SingleL1_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet60_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet75_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Loose_eta2p3_CrossL1_ETau_Monitoring_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_eta2p3_CrossL1_ETau_Monitoring_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_eta2p3_CrossL1_ETau_Monitoring_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet45_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_SinglePFJet25_PNet1Tauh0p50_v6',
    'HLT_IsoMu24_eta2p1_v27',
    'HLT_IsoMu24_v25',
    'HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v8',
    'HLT_IsoMu27_v28',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v9',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v12',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v9',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v9',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v12',
    'HLT_IsoTrk200_L1SingleMuShower_v4',
    'HLT_IsoTrk400_L1SingleMuShower_v4',
    'HLT_L1CSCShower_DTCluster50_v10',
    'HLT_L1CSCShower_DTCluster75_v10',
    'HLT_L2Mu50NoVtx_3Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v4',
    'HLT_L2Mu50NoVtx_3Cha_VetoL3Mu0DxyMax1cm_v4',
    'HLT_L3Mu30NoVtx_DxyMin0p01cm_v3',
    'HLT_L3Mu50NoVtx_DxyMin0p01cm_v3',
    'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v10',
    'HLT_Mu12_IsoVVL_PFHT150_PNetBTag0p53_v5',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v27',
    'HLT_Mu15_IsoVVVL_PFHT450_v27',
    'HLT_Mu15_IsoVVVL_PFHT600_v31',
    'HLT_Mu15_v15',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v17',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8CaloJet30_v5',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8PFJet30_v5',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_CaloJet30_v5',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_PFJet30_v6',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v17',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v27',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v26',
    'HLT_Mu17_TrkIsoVVL_v25',
    'HLT_Mu17_v25',
    'HLT_Mu18_Mu9_SameSign_v16',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v15',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v15',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v15',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v15',
    'HLT_Mu19_TrkIsoVVL_v16',
    'HLT_Mu19_v16',
    'HLT_Mu20_v24',
    'HLT_Mu27_v25',
    'HLT_Mu37_TkMu27_v17',
    'HLT_Mu3_PFJet40_v28',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v14',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v14',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v14',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v14',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v14',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v14',
    'HLT_Mu50_IsoVVVL_PFHT450_v27',
    'HLT_Mu50_L1SingleMuShower_v11',
    'HLT_Mu50_v25',
    'HLT_Mu55_v15',
    'HLT_Mu8_TrkIsoVVL_v24',
    'HLT_Mu8_v24',
    'HLT_TripleMu_10_5_5_DZ_v22',
    'HLT_TripleMu_12_10_5_v22',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v15',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v20',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v17' ),
  MuonEG = cms.vstring( 'HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_v29',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_v29',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_v29',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v27',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v19',
    'HLT_Mu17_Photon30_IsoCaloId_v18',
    'HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_v11',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v27',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v19',
    'HLT_Mu27_Ele37_CaloIdL_MW_v17',
    'HLT_Mu37_Ele27_CaloIdL_MW_v17',
    'HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_v11',
    'HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_v11',
    'HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_v15',
    'HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_v15',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_v30',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_v30',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_v31',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_v31',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_v13',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v10',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_v10',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_v13',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PNet2BTagMean0p50_v9',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v13',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_PNet1BTag0p20_v6',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_PNet2BTagMean0p55_v6',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_v6',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_v6',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_PNet2BTagMean0p55_v9',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_v9',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_v9',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v25',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v23' ),
  NoBPTX = cms.vstring( 'HLT_CDC_L2cosmic_10_er1p0_v10',
    'HLT_CDC_L2cosmic_5p5_er1p0_v10',
    'HLT_L2Mu10_NoVertex_NoBPTX3BX_v14',
    'HLT_L2Mu10_NoVertex_NoBPTX_v15',
    'HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_v14',
    'HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_v13',
    'HLT_UncorrectedJetE30_NoBPTX3BX_v14',
    'HLT_UncorrectedJetE30_NoBPTX_v14',
    'HLT_UncorrectedJetE60_NoBPTX3BX_v14',
    'HLT_UncorrectedJetE70_NoBPTX3BX_v14' ),
  OnlineMonitor = ( cms.vstring( 'HLT_AK8DiPFJet250_250_SoftDropMass40_v6',
    'HLT_AK8DiPFJet250_250_SoftDropMass50_v6',
    'HLT_AK8DiPFJet260_260_SoftDropMass30_v6',
    'HLT_AK8DiPFJet260_260_SoftDropMass40_v6',
    'HLT_AK8DiPFJet270_270_SoftDropMass30_v6',
    'HLT_AK8DiPFJet280_280_SoftDropMass30_v12',
    'HLT_AK8DiPFJet290_290_SoftDropMass30_v6',
    'HLT_AK8PFJet140_v27',
    'HLT_AK8PFJet200_v27',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v9',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p53_v9',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p55_v9',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p60_v9',
    'HLT_AK8PFJet220_SoftDropMass40_v13',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v9',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v9',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p03_v9',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p05_v9',
    'HLT_AK8PFJet230_SoftDropMass40_v13',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p06_v9',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p10_v9',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p03_v9',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p05_v9',
    'HLT_AK8PFJet260_v28',
    'HLT_AK8PFJet275_Nch40_v6',
    'HLT_AK8PFJet275_Nch45_v6',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p06_v9',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p10_v9',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p03_v9',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p05_v9',
    'HLT_AK8PFJet320_v28',
    'HLT_AK8PFJet380_SoftDropMass30_v6',
    'HLT_AK8PFJet400_SoftDropMass30_v6',
    'HLT_AK8PFJet400_v28',
    'HLT_AK8PFJet40_v28',
    'HLT_AK8PFJet425_SoftDropMass30_v6',
    'HLT_AK8PFJet450_SoftDropMass30_v6',
    'HLT_AK8PFJet450_v28',
    'HLT_AK8PFJet500_v28',
    'HLT_AK8PFJet550_v23',
    'HLT_AK8PFJet60_v27',
    'HLT_AK8PFJet80_v28',
    'HLT_AK8PFJetFwd140_v26',
    'HLT_AK8PFJetFwd200_v26',
    'HLT_AK8PFJetFwd260_v27',
    'HLT_AK8PFJetFwd320_v27',
    'HLT_AK8PFJetFwd400_v27',
    'HLT_AK8PFJetFwd40_v27',
    'HLT_AK8PFJetFwd450_v27',
    'HLT_AK8PFJetFwd500_v27',
    'HLT_AK8PFJetFwd60_v26',
    'HLT_AK8PFJetFwd80_v26',
    'HLT_BTagMu_AK4DiJet110_Mu5_v25',
    'HLT_BTagMu_AK4DiJet170_Mu5_v24',
    'HLT_BTagMu_AK4DiJet20_Mu5_v25',
    'HLT_BTagMu_AK4DiJet40_Mu5_v25',
    'HLT_BTagMu_AK4DiJet70_Mu5_v25',
    'HLT_BTagMu_AK4Jet300_Mu5_v24',
    'HLT_BTagMu_AK8DiJet170_Mu5_v21',
    'HLT_BTagMu_AK8Jet170_DoubleMu5_v14',
    'HLT_BTagMu_AK8Jet300_Mu5_v24',
    'HLT_CDC_L2cosmic_10_er1p0_v10',
    'HLT_CDC_L2cosmic_5p5_er1p0_v10',
    'HLT_CaloJet500_NoJetID_v22',
    'HLT_CaloJet550_NoJetID_v17',
    'HLT_CaloMET350_NotCleaned_v14',
    'HLT_CaloMET60_DTCluster50_v11',
    'HLT_CaloMET60_DTClusterNoMB1S50_v11',
    'HLT_CaloMET90_NotCleaned_v14',
    'HLT_CaloMHT90_v14',
    'HLT_CascadeMu100_v13',
    'HLT_CscCluster50_Photon20Unseeded_v4',
    'HLT_CscCluster50_Photon30Unseeded_v4',
    'HLT_CscCluster_Loose_v10',
    'HLT_CscCluster_Medium_v10',
    'HLT_CscCluster_Tight_v10',
    'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v14',
    'HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_v29',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_v29',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_v29',
    'HLT_DiPFJetAve100_HFJEC_v29',
    'HLT_DiPFJetAve140_v25',
    'HLT_DiPFJetAve160_HFJEC_v28',
    'HLT_DiPFJetAve200_v25',
    'HLT_DiPFJetAve220_HFJEC_v28',
    'HLT_DiPFJetAve260_HFJEC_v11',
    'HLT_DiPFJetAve260_v26',
    'HLT_DiPFJetAve300_HFJEC_v28',
    'HLT_DiPFJetAve320_v26',
    'HLT_DiPFJetAve400_v26',
    'HLT_DiPFJetAve40_v26',
    'HLT_DiPFJetAve500_v26',
    'HLT_DiPFJetAve60_HFJEC_v27',
    'HLT_DiPFJetAve60_v26',
    'HLT_DiPFJetAve80_HFJEC_v29',
    'HLT_DiPFJetAve80_v26',
    'HLT_DiPhoton10Time1ns_v10',
    'HLT_DiPhoton10Time1p2ns_v10',
    'HLT_DiPhoton10Time1p4ns_v10',
    'HLT_DiPhoton10Time1p6ns_v10',
    'HLT_DiPhoton10Time1p8ns_v10',
    'HLT_DiPhoton10Time2ns_v10',
    'HLT_DiPhoton10_CaloIdL_v10',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v24',
    'HLT_Dimuon0_Jpsi3p5_Muon2_v17',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v19',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_v20',
    'HLT_Dimuon0_Jpsi_v20',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v20',
    'HLT_Dimuon0_LowMass_L1_4_v20',
    'HLT_Dimuon0_LowMass_L1_TM530_v18',
    'HLT_Dimuon0_LowMass_v20',
    'HLT_Dimuon0_Upsilon_L1_4p5_v21',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v19',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v21',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v18',
    'HLT_Dimuon0_Upsilon_NoVertexing_v19',
    'HLT_Dimuon10_Upsilon_y1p4_v13',
    'HLT_Dimuon12_Upsilon_y1p4_v14',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v19',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v17',
    'HLT_Dimuon14_PsiPrime_v25',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v18',
    'HLT_Dimuon18_PsiPrime_v26',
    'HLT_Dimuon24_Phi_noCorrL1_v18',
    'HLT_Dimuon24_Upsilon_noCorrL1_v18',
    'HLT_Dimuon25_Jpsi_noCorrL1_v18',
    'HLT_Dimuon25_Jpsi_v26',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v10',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v10',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v10',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v10',
    'HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v10',
    'HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v10',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v11',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v11',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v23',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v23',
    'HLT_DiphotonMVA14p25_Mass90_v3',
    'HLT_DiphotonMVA14p25_Tight_Mass90_v3',
    'HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v8',
    'HLT_DoubleCscCluster100_v7',
    'HLT_DoubleCscCluster75_v7',
    'HLT_DoubleEle25_CaloIdL_MW_v15',
    'HLT_DoubleEle27_CaloIdL_MW_v15',
    'HLT_DoubleEle33_CaloIdL_MW_v28',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v32',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v32',
    'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v11',
    'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v12',
    'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v11',
    'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v11',
    'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v11',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v11',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v11',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v11',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v11',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v11',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v11',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v11',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v11',
    'HLT_DoubleL2Mu50_v11',
    'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v10',
    'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v10',
    'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v11',
    'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v10',
    'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v10',
    'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v10',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_noDxy_v8',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_v13',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS36_Trk1_eta2p1_v8',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_v8',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_v12',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_v12',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v18',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_noDCA_v6',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_v6',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v22',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v22',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v22',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v22',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v16',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v16',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v18',
    'HLT_DoubleMu3_Trk_Tau3mu_v24',
    'HLT_DoubleMu43NoFiltersNoVtx_v14',
    'HLT_DoubleMu48NoFiltersNoVtx_v14',
    'HLT_DoubleMu4_3_Bs_v27',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v12',
    'HLT_DoubleMu4_3_Jpsi_v27',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v12',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v19',
    'HLT_DoubleMu4_JpsiTrk_Bc_v12',
    'HLT_DoubleMu4_Jpsi_Displaced_v19',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v19',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v20',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v27',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v16',
    'HLT_DoublePFJets100_PNetBTag_0p11_v6',
    'HLT_DoublePFJets116MaxDeta1p6_PNet2BTag_0p11_v6',
    'HLT_DoublePFJets128MaxDeta1p6_PNet2BTag_0p11_v6',
    'HLT_DoublePFJets200_PNetBTag_0p11_v6',
    'HLT_DoublePFJets350_PNetBTag_0p11_v6',
    'HLT_DoublePFJets40_PNetBTag_0p11_v6',
    'HLT_DoublePhoton33_CaloIdL_v17',
    'HLT_DoublePhoton70_v17',
    'HLT_DoublePhoton85_v25',
    'HLT_ECALHT800_v20',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v25',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v30',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v18',
    'HLT_Ele14_eta2p5_IsoVVVL_Gsf_PFHT200_PNetBTag0p53_v5',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v28',
    'HLT_Ele15_IsoVVVL_PFHT450_v28',
    'HLT_Ele15_IsoVVVL_PFHT600_v32',
    'HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v19',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v28',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v30',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v30',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v29',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v29',
    'HLT_Ele28_HighEta_SC20_Mass55_v23',
    'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v25',
    'HLT_Ele30_WPTight_Gsf_v11',
    'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v25',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v19',
    'HLT_Ele32_WPTight_Gsf_v25',
    'HLT_Ele35_WPTight_Gsf_v19',
    'HLT_Ele38_WPTight_Gsf_v19',
    'HLT_Ele40_WPTight_Gsf_v19',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v9',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v12',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v9',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v9',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v12',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v30',
    'HLT_Ele50_IsoVVVL_PFHT450_v28',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v28',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v30',
    'HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v11',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_v11',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_v11',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_v11',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_v11',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v11',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v11',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_v11',
    'HLT_HT200_L1SingleLLPJet_PFJet60_NeutralHadronFrac0p7_v6',
    'HLT_HT200_L1SingleLLPJet_PFJet60_NeutralHadronFrac0p8_v6',
    'HLT_HT240_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v8',
    'HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v11',
    'HLT_HT280_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v8')+cms.vstring( 'HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_v11',
    'HLT_HT350_DelayedJet40_SingleDelay3nsInclusive_v7',
    'HLT_HT350_DelayedJet40_SingleDelay3p25nsInclusive_v7',
    'HLT_HT350_DelayedJet40_SingleDelay3p5nsInclusive_v7',
    'HLT_HT350_v7',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v23',
    'HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_v11',
    'HLT_HT425_v19',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_v10',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_v11',
    'HLT_HT430_DelayedJet40_DoubleDelay0p75nsTrackless_v7',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_v11',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsTrackless_v7',
    'HLT_HT430_DelayedJet40_DoubleDelay1p25nsInclusive_v7',
    'HLT_HT430_DelayedJet40_DoubleDelay1p5nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_v11',
    'HLT_HT430_DelayedJet40_SingleDelay1p25nsTrackless_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsTrackless_v7',
    'HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_v11',
    'HLT_HT430_DelayedJet40_SingleDelay2p25nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay2p5nsInclusive_v7',
    'HLT_HT550_DisplacedDijet60_Inclusive_v23',
    'HLT_HcalNZS_v21',
    'HLT_HcalPhiSym_v23',
    'HLT_HighPtTkMu100_v12',
    'HLT_IsoMu20_v27',
    'HLT_IsoMu24_OneProng32_v9',
    'HLT_IsoMu24_TwoProngs35_v13',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v13',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v13',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v12',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v12',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v12',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v12',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v13',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v12',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_PNet1Tauh0p50_v6',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_v6',
    'HLT_IsoMu24_eta2p1_PFHT250_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Loose_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Medium_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Tight_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_L2NN_eta2p3_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_SinglePFJet25_PNet1Tauh0p50_v6',
    'HLT_IsoMu24_eta2p1_v27',
    'HLT_IsoMu24_v25',
    'HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v8',
    'HLT_IsoMu27_v28',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v9',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v12',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v9',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v9',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v12',
    'HLT_IsoTrackHB_v14',
    'HLT_IsoTrackHE_v14',
    'HLT_L1CSCShower_DTCluster50_v10',
    'HLT_L1CSCShower_DTCluster75_v10',
    'HLT_L1ETMHadSeeds_v10',
    'HLT_L1MET_DTCluster50_v11',
    'HLT_L1MET_DTClusterNoMB1S50_v11',
    'HLT_L1Mu6HT240_v9',
    'HLT_L1SingleLLPJet_v7',
    'HLT_L1SingleMuCosmics_v8',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p5nsTrackless_v9',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p75nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1nsTrackless_v9',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p75nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5nsTrackless_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p75nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_SingleDelay3nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p5nsInclusive_v9',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p75nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_SingleDelay4nsInclusive_v7',
    'HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_v9',
    'HLT_L2Mu10_NoVertex_NoBPTX3BX_v14',
    'HLT_L2Mu10_NoVertex_NoBPTX_v15',
    'HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_v14',
    'HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_v13',
    'HLT_L2Mu50NoVtx_3Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v4',
    'HLT_L2Mu50NoVtx_3Cha_VetoL3Mu0DxyMax1cm_v4',
    'HLT_L3Mu30NoVtx_DxyMin0p01cm_v3',
    'HLT_L3Mu50NoVtx_DxyMin0p01cm_v3',
    'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v10',
    'HLT_MET105_IsoTrk50_v19',
    'HLT_MET120_IsoTrk50_v19',
    'HLT_Mu12_DoublePFJets100_PNetBTag_0p11_v6',
    'HLT_Mu12_DoublePFJets200_PNetBTag_0p11_v6',
    'HLT_Mu12_DoublePFJets350_PNetBTag_0p11_v6',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_PNet2BTag_0p11_v6',
    'HLT_Mu12_DoublePFJets40_PNetBTag_0p11_v6',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_PNet2BTag_0p11_v6',
    'HLT_Mu12_IsoVVL_PFHT150_PNetBTag0p53_v5',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v27',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v19',
    'HLT_Mu12eta2p3_PFJet40_v13',
    'HLT_Mu12eta2p3_v13',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v27',
    'HLT_Mu15_IsoVVVL_PFHT450_v27',
    'HLT_Mu15_IsoVVVL_PFHT600_v31',
    'HLT_Mu15_v15',
    'HLT_Mu17_Photon30_IsoCaloId_v18',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v17',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8CaloJet30_v5',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8PFJet30_v5',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_CaloJet30_v5',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_PFJet30_v6',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v17',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v27',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v26',
    'HLT_Mu17_TrkIsoVVL_v25',
    'HLT_Mu17_v25',
    'HLT_Mu18_Mu9_SameSign_v16',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v15',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v15',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v15',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v15',
    'HLT_Mu19_TrkIsoVVL_v16',
    'HLT_Mu19_v16',
    'HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_v11',
    'HLT_Mu20_v24',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v27',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v19',
    'HLT_Mu25_TkMu0_Phi_v20',
    'HLT_Mu27_Ele37_CaloIdL_MW_v17',
    'HLT_Mu27_v25',
    'HLT_Mu30_TkMu0_Psi_v13',
    'HLT_Mu30_TkMu0_Upsilon_v13',
    'HLT_Mu37_Ele27_CaloIdL_MW_v17',
    'HLT_Mu37_TkMu27_v17',
    'HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_v11',
    'HLT_Mu3_PFJet40_v28',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v14',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v14',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v14',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v14',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v14',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v14',
    'HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_v11',
    'HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_v15',
    'HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_v15',
    'HLT_Mu4_L1DoubleMu_v13',
    'HLT_Mu50_IsoVVVL_PFHT450_v27',
    'HLT_Mu50_L1SingleMuShower_v11',
    'HLT_Mu50_v25',
    'HLT_Mu55_v15',
    'HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_v11',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_v11',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_v11',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_v11',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_v11',
    'HLT_Mu6HT240_DisplacedDijet45_Inclusive0PtrkShortSig5_v11',
    'HLT_Mu6HT240_DisplacedDijet50_Inclusive0PtrkShortSig5_v11',
    'HLT_Mu7p5_L2Mu2_Jpsi_v22',
    'HLT_Mu7p5_L2Mu2_Upsilon_v22',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_v30',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_v30',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_v31',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_v31',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_v13',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v10',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_v10',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_v13',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PNet2BTagMean0p50_v9',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v13',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_PNet1BTag0p20_v6',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_PNet2BTagMean0p55_v6',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_v6',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_v6',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_PNet2BTagMean0p55_v9',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_v9',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_v9',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v25',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v23',
    'HLT_Mu8_TrkIsoVVL_v24',
    'HLT_Mu8_v24',
    'HLT_PFHT1050_v30',
    'HLT_PFHT180_v29',
    'HLT_PFHT250_v29',
    'HLT_PFHT350_v31',
    'HLT_PFHT370_v29',
    'HLT_PFHT430_v29',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v24',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v24',
    'HLT_PFHT510_v29',
    'HLT_PFHT590_v29',
    'HLT_PFHT680_v29',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v24',
    'HLT_PFHT780_v29',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v24',
    'HLT_PFHT890_v29',
    'HLT_PFJet110_v12',
    'HLT_PFJet140_v31',
    'HLT_PFJet200_TimeGt2p5ns_v10',
    'HLT_PFJet200_TimeLtNeg2p5ns_v10',
    'HLT_PFJet200_v31',
    'HLT_PFJet260_v32',
    'HLT_PFJet320_v32',
    'HLT_PFJet400_v32',
    'HLT_PFJet40_v33',
    'HLT_PFJet450_v33',
    'HLT_PFJet500_v33',
    'HLT_PFJet550_v23',
    'HLT_PFJet60_v33',
    'HLT_PFJet80_v33',
    'HLT_PFJetFwd140_v30',
    'HLT_PFJetFwd200_v30',
    'HLT_PFJetFwd260_v31',
    'HLT_PFJetFwd320_v31',
    'HLT_PFJetFwd400_v31',
    'HLT_PFJetFwd40_v31',
    'HLT_PFJetFwd450_v31',
    'HLT_PFJetFwd500_v31',
    'HLT_PFJetFwd60_v31',
    'HLT_PFJetFwd80_v30',
    'HLT_PFMET105_IsoTrk50_v13',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v21',
    'HLT_PFMET120_PFMHT120_IDTight_v32',
    'HLT_PFMET130_PFMHT130_IDTight_v32',
    'HLT_PFMET140_PFMHT140_IDTight_v32',
    'HLT_PFMET200_BeamHaloCleaned_v21',
    'HLT_PFMET200_NotCleaned_v21',
    'HLT_PFMET250_NotCleaned_v21',
    'HLT_PFMET300_NotCleaned_v21',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v12',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v12',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v21',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v32',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v12',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v31',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v12',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v31',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v23',
    'HLT_PFMETTypeOne200_BeamHaloCleaned_v21',
    'HLT_Photon100EBHE10_v12',
    'HLT_Photon110EB_TightID_TightIso_AK8CaloJet30_v3',
    'HLT_Photon110EB_TightID_TightIso_AK8PFJet30_v5',
    'HLT_Photon110EB_TightID_TightIso_CaloJet30_v3',
    'HLT_Photon110EB_TightID_TightIso_PFJet30_v6',
    'HLT_Photon110EB_TightID_TightIso_v12',
    'HLT_Photon120_R9Id90_HE10_IsoM_v24',
    'HLT_Photon120_v23',
    'HLT_Photon150_v17',
    'HLT_Photon165_R9Id90_HE10_IsoM_v25',
    'HLT_Photon175_v25',
    'HLT_Photon200_v24')+cms.vstring( 'HLT_Photon20_HoverELoose_v20',
    'HLT_Photon300_NoHE_v23',
    'HLT_Photon30EB_TightID_TightIso_v12',
    'HLT_Photon30_HoverELoose_v20',
    'HLT_Photon32_OneProng32_M50To105_v10',
    'HLT_Photon33_v15',
    'HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v8',
    'HLT_Photon35_TwoProngs35_v13',
    'HLT_Photon40EB_TightID_TightIso_v3',
    'HLT_Photon40EB_v3',
    'HLT_Photon45EB_TightID_TightIso_v3',
    'HLT_Photon45EB_v3',
    'HLT_Photon50EB_TightID_TightIso_AK8CaloJet30_v3',
    'HLT_Photon50EB_TightID_TightIso_AK8PFJet30_v5',
    'HLT_Photon50EB_TightID_TightIso_CaloJet30_v3',
    'HLT_Photon50EB_TightID_TightIso_PFJet30_v6',
    'HLT_Photon50EB_TightID_TightIso_v8',
    'HLT_Photon50_R9Id90_HE10_IsoM_v24',
    'HLT_Photon50_TimeGt2p5ns_v7',
    'HLT_Photon50_TimeLtNeg2p5ns_v7',
    'HLT_Photon50_v23',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v10',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v10',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v10',
    'HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v9',
    'HLT_Photon75EB_TightID_TightIso_v8',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v17',
    'HLT_Photon75_R9Id90_HE10_IsoM_v24',
    'HLT_Photon75_v23',
    'HLT_Photon90EB_TightID_TightIso_v8',
    'HLT_Photon90_R9Id90_HE10_IsoM_v24',
    'HLT_Photon90_v23',
    'HLT_Physics_v14',
    'HLT_QuadPFJet100_88_70_30_v10',
    'HLT_QuadPFJet103_88_75_15_v17',
    'HLT_QuadPFJet105_88_75_30_v9',
    'HLT_QuadPFJet105_88_76_15_v17',
    'HLT_QuadPFJet111_90_80_15_v17',
    'HLT_QuadPFJet111_90_80_30_v9',
    'HLT_Random_v3',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v16',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v17',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v14',
    'HLT_TripleMu_10_5_5_DZ_v22',
    'HLT_TripleMu_12_10_5_v22',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v15',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v20',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v17',
    'HLT_UncorrectedJetE30_NoBPTX3BX_v14',
    'HLT_UncorrectedJetE30_NoBPTX_v14',
    'HLT_UncorrectedJetE60_NoBPTX3BX_v14',
    'HLT_UncorrectedJetE70_NoBPTX3BX_v14',
    'HLT_ZeroBias_Alignment_v8',
    'HLT_ZeroBias_FirstBXAfterTrain_v10',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v12',
    'HLT_ZeroBias_FirstCollisionInTrain_v11',
    'HLT_ZeroBias_IsolatedBunches_v12',
    'HLT_ZeroBias_LastCollisionInTrain_v10',
    'HLT_ZeroBias_v13') ),
  ParkingDoubleMuonLowMass0 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v17',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v19',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_v20',
    'HLT_Dimuon0_Jpsi_v20',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v20',
    'HLT_Dimuon0_LowMass_L1_4_v20',
    'HLT_Dimuon0_LowMass_L1_TM530_v18',
    'HLT_Dimuon0_LowMass_v20',
    'HLT_Dimuon0_Upsilon_L1_4p5_v21',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v19',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v21',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v18',
    'HLT_Dimuon0_Upsilon_NoVertexing_v19',
    'HLT_Dimuon10_Upsilon_y1p4_v13',
    'HLT_Dimuon12_Upsilon_y1p4_v14',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v19',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v17',
    'HLT_Dimuon14_PsiPrime_v25',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v18',
    'HLT_Dimuon18_PsiPrime_v26',
    'HLT_Dimuon24_Phi_noCorrL1_v18',
    'HLT_Dimuon24_Upsilon_noCorrL1_v18',
    'HLT_Dimuon25_Jpsi_noCorrL1_v18',
    'HLT_Dimuon25_Jpsi_v26',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v18',
    'HLT_DoubleMu2_Jpsi_LowPt_v6',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v16',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v16',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v18',
    'HLT_DoubleMu3_Trk_Tau3mu_v24',
    'HLT_DoubleMu4_3_Bs_v27',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v12',
    'HLT_DoubleMu4_3_Jpsi_v27',
    'HLT_DoubleMu4_3_LowMass_SS_v6',
    'HLT_DoubleMu4_3_LowMass_v13',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v12',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v19',
    'HLT_DoubleMu4_JpsiTrk_Bc_v12',
    'HLT_DoubleMu4_Jpsi_Displaced_v19',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v19',
    'HLT_DoubleMu4_LowMass_Displaced_v13',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v27',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v16',
    'HLT_Mu25_TkMu0_Phi_v20',
    'HLT_Mu30_TkMu0_Psi_v13',
    'HLT_Mu30_TkMu0_Upsilon_v13',
    'HLT_Mu4_L1DoubleMu_v13',
    'HLT_Mu7p5_L2Mu2_Jpsi_v22',
    'HLT_Mu7p5_L2Mu2_Upsilon_v22',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v16',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v17',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v14' ),
  ParkingDoubleMuonLowMass1 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v17',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v19',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_v20',
    'HLT_Dimuon0_Jpsi_v20',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v20',
    'HLT_Dimuon0_LowMass_L1_4_v20',
    'HLT_Dimuon0_LowMass_L1_TM530_v18',
    'HLT_Dimuon0_LowMass_v20',
    'HLT_Dimuon0_Upsilon_L1_4p5_v21',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v19',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v21',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v18',
    'HLT_Dimuon0_Upsilon_NoVertexing_v19',
    'HLT_Dimuon10_Upsilon_y1p4_v13',
    'HLT_Dimuon12_Upsilon_y1p4_v14',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v19',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v17',
    'HLT_Dimuon14_PsiPrime_v25',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v18',
    'HLT_Dimuon18_PsiPrime_v26',
    'HLT_Dimuon24_Phi_noCorrL1_v18',
    'HLT_Dimuon24_Upsilon_noCorrL1_v18',
    'HLT_Dimuon25_Jpsi_noCorrL1_v18',
    'HLT_Dimuon25_Jpsi_v26',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v18',
    'HLT_DoubleMu2_Jpsi_LowPt_v6',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v16',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v16',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v18',
    'HLT_DoubleMu3_Trk_Tau3mu_v24',
    'HLT_DoubleMu4_3_Bs_v27',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v12',
    'HLT_DoubleMu4_3_Jpsi_v27',
    'HLT_DoubleMu4_3_LowMass_SS_v6',
    'HLT_DoubleMu4_3_LowMass_v13',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v12',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v19',
    'HLT_DoubleMu4_JpsiTrk_Bc_v12',
    'HLT_DoubleMu4_Jpsi_Displaced_v19',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v19',
    'HLT_DoubleMu4_LowMass_Displaced_v13',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v27',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v16',
    'HLT_Mu25_TkMu0_Phi_v20',
    'HLT_Mu30_TkMu0_Psi_v13',
    'HLT_Mu30_TkMu0_Upsilon_v13',
    'HLT_Mu4_L1DoubleMu_v13',
    'HLT_Mu7p5_L2Mu2_Jpsi_v22',
    'HLT_Mu7p5_L2Mu2_Upsilon_v22',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v16',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v17',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v14' ),
  ParkingDoubleMuonLowMass2 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v17',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v19',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_v20',
    'HLT_Dimuon0_Jpsi_v20',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v20',
    'HLT_Dimuon0_LowMass_L1_4_v20',
    'HLT_Dimuon0_LowMass_L1_TM530_v18',
    'HLT_Dimuon0_LowMass_v20',
    'HLT_Dimuon0_Upsilon_L1_4p5_v21',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v19',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v21',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v18',
    'HLT_Dimuon0_Upsilon_NoVertexing_v19',
    'HLT_Dimuon10_Upsilon_y1p4_v13',
    'HLT_Dimuon12_Upsilon_y1p4_v14',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v19',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v17',
    'HLT_Dimuon14_PsiPrime_v25',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v18',
    'HLT_Dimuon18_PsiPrime_v26',
    'HLT_Dimuon24_Phi_noCorrL1_v18',
    'HLT_Dimuon24_Upsilon_noCorrL1_v18',
    'HLT_Dimuon25_Jpsi_noCorrL1_v18',
    'HLT_Dimuon25_Jpsi_v26',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v18',
    'HLT_DoubleMu2_Jpsi_LowPt_v6',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v16',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v16',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v18',
    'HLT_DoubleMu3_Trk_Tau3mu_v24',
    'HLT_DoubleMu4_3_Bs_v27',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v12',
    'HLT_DoubleMu4_3_Jpsi_v27',
    'HLT_DoubleMu4_3_LowMass_SS_v6',
    'HLT_DoubleMu4_3_LowMass_v13',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v12',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v19',
    'HLT_DoubleMu4_JpsiTrk_Bc_v12',
    'HLT_DoubleMu4_Jpsi_Displaced_v19',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v19',
    'HLT_DoubleMu4_LowMass_Displaced_v13',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v27',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v16',
    'HLT_Mu25_TkMu0_Phi_v20',
    'HLT_Mu30_TkMu0_Psi_v13',
    'HLT_Mu30_TkMu0_Upsilon_v13',
    'HLT_Mu4_L1DoubleMu_v13',
    'HLT_Mu7p5_L2Mu2_Jpsi_v22',
    'HLT_Mu7p5_L2Mu2_Upsilon_v22',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v16',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v17',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v14' ),
  ParkingDoubleMuonLowMass3 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v17',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v19',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_v20',
    'HLT_Dimuon0_Jpsi_v20',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v20',
    'HLT_Dimuon0_LowMass_L1_4_v20',
    'HLT_Dimuon0_LowMass_L1_TM530_v18',
    'HLT_Dimuon0_LowMass_v20',
    'HLT_Dimuon0_Upsilon_L1_4p5_v21',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v19',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v21',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v18',
    'HLT_Dimuon0_Upsilon_NoVertexing_v19',
    'HLT_Dimuon10_Upsilon_y1p4_v13',
    'HLT_Dimuon12_Upsilon_y1p4_v14',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v19',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v17',
    'HLT_Dimuon14_PsiPrime_v25',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v18',
    'HLT_Dimuon18_PsiPrime_v26',
    'HLT_Dimuon24_Phi_noCorrL1_v18',
    'HLT_Dimuon24_Upsilon_noCorrL1_v18',
    'HLT_Dimuon25_Jpsi_noCorrL1_v18',
    'HLT_Dimuon25_Jpsi_v26',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v18',
    'HLT_DoubleMu2_Jpsi_LowPt_v6',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v16',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v16',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v18',
    'HLT_DoubleMu3_Trk_Tau3mu_v24',
    'HLT_DoubleMu4_3_Bs_v27',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v12',
    'HLT_DoubleMu4_3_Jpsi_v27',
    'HLT_DoubleMu4_3_LowMass_SS_v6',
    'HLT_DoubleMu4_3_LowMass_v13',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v12',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v19',
    'HLT_DoubleMu4_JpsiTrk_Bc_v12',
    'HLT_DoubleMu4_Jpsi_Displaced_v19',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v19',
    'HLT_DoubleMu4_LowMass_Displaced_v13',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v27',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v16',
    'HLT_Mu25_TkMu0_Phi_v20',
    'HLT_Mu30_TkMu0_Psi_v13',
    'HLT_Mu30_TkMu0_Upsilon_v13',
    'HLT_Mu4_L1DoubleMu_v13',
    'HLT_Mu7p5_L2Mu2_Jpsi_v22',
    'HLT_Mu7p5_L2Mu2_Upsilon_v22',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v16',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v17',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v14' ),
  ParkingDoubleMuonLowMass4 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v17',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v19',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_v20',
    'HLT_Dimuon0_Jpsi_v20',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v20',
    'HLT_Dimuon0_LowMass_L1_4_v20',
    'HLT_Dimuon0_LowMass_L1_TM530_v18',
    'HLT_Dimuon0_LowMass_v20',
    'HLT_Dimuon0_Upsilon_L1_4p5_v21',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v19',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v21',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v18',
    'HLT_Dimuon0_Upsilon_NoVertexing_v19',
    'HLT_Dimuon10_Upsilon_y1p4_v13',
    'HLT_Dimuon12_Upsilon_y1p4_v14',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v19',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v17',
    'HLT_Dimuon14_PsiPrime_v25',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v18',
    'HLT_Dimuon18_PsiPrime_v26',
    'HLT_Dimuon24_Phi_noCorrL1_v18',
    'HLT_Dimuon24_Upsilon_noCorrL1_v18',
    'HLT_Dimuon25_Jpsi_noCorrL1_v18',
    'HLT_Dimuon25_Jpsi_v26',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v18',
    'HLT_DoubleMu2_Jpsi_LowPt_v6',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v16',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v16',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v18',
    'HLT_DoubleMu3_Trk_Tau3mu_v24',
    'HLT_DoubleMu4_3_Bs_v27',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v12',
    'HLT_DoubleMu4_3_Jpsi_v27',
    'HLT_DoubleMu4_3_LowMass_SS_v6',
    'HLT_DoubleMu4_3_LowMass_v13',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v12',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v19',
    'HLT_DoubleMu4_JpsiTrk_Bc_v12',
    'HLT_DoubleMu4_Jpsi_Displaced_v19',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v19',
    'HLT_DoubleMu4_LowMass_Displaced_v13',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v27',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v16',
    'HLT_Mu25_TkMu0_Phi_v20',
    'HLT_Mu30_TkMu0_Psi_v13',
    'HLT_Mu30_TkMu0_Upsilon_v13',
    'HLT_Mu4_L1DoubleMu_v13',
    'HLT_Mu7p5_L2Mu2_Jpsi_v22',
    'HLT_Mu7p5_L2Mu2_Upsilon_v22',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v16',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v17',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v14' ),
  ParkingDoubleMuonLowMass5 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v17',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v19',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_v20',
    'HLT_Dimuon0_Jpsi_v20',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v20',
    'HLT_Dimuon0_LowMass_L1_4_v20',
    'HLT_Dimuon0_LowMass_L1_TM530_v18',
    'HLT_Dimuon0_LowMass_v20',
    'HLT_Dimuon0_Upsilon_L1_4p5_v21',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v19',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v21',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v18',
    'HLT_Dimuon0_Upsilon_NoVertexing_v19',
    'HLT_Dimuon10_Upsilon_y1p4_v13',
    'HLT_Dimuon12_Upsilon_y1p4_v14',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v19',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v17',
    'HLT_Dimuon14_PsiPrime_v25',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v18',
    'HLT_Dimuon18_PsiPrime_v26',
    'HLT_Dimuon24_Phi_noCorrL1_v18',
    'HLT_Dimuon24_Upsilon_noCorrL1_v18',
    'HLT_Dimuon25_Jpsi_noCorrL1_v18',
    'HLT_Dimuon25_Jpsi_v26',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v18',
    'HLT_DoubleMu2_Jpsi_LowPt_v6',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v16',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v16',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v18',
    'HLT_DoubleMu3_Trk_Tau3mu_v24',
    'HLT_DoubleMu4_3_Bs_v27',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v12',
    'HLT_DoubleMu4_3_Jpsi_v27',
    'HLT_DoubleMu4_3_LowMass_SS_v6',
    'HLT_DoubleMu4_3_LowMass_v13',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v12',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v19',
    'HLT_DoubleMu4_JpsiTrk_Bc_v12',
    'HLT_DoubleMu4_Jpsi_Displaced_v19',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v19',
    'HLT_DoubleMu4_LowMass_Displaced_v13',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v27',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v16',
    'HLT_Mu25_TkMu0_Phi_v20',
    'HLT_Mu30_TkMu0_Psi_v13',
    'HLT_Mu30_TkMu0_Upsilon_v13',
    'HLT_Mu4_L1DoubleMu_v13',
    'HLT_Mu7p5_L2Mu2_Jpsi_v22',
    'HLT_Mu7p5_L2Mu2_Upsilon_v22',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v16',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v17',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v14' ),
  ParkingDoubleMuonLowMass6 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v17',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v19',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_v20',
    'HLT_Dimuon0_Jpsi_v20',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v20',
    'HLT_Dimuon0_LowMass_L1_4_v20',
    'HLT_Dimuon0_LowMass_L1_TM530_v18',
    'HLT_Dimuon0_LowMass_v20',
    'HLT_Dimuon0_Upsilon_L1_4p5_v21',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v19',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v21',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v18',
    'HLT_Dimuon0_Upsilon_NoVertexing_v19',
    'HLT_Dimuon10_Upsilon_y1p4_v13',
    'HLT_Dimuon12_Upsilon_y1p4_v14',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v19',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v17',
    'HLT_Dimuon14_PsiPrime_v25',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v18',
    'HLT_Dimuon18_PsiPrime_v26',
    'HLT_Dimuon24_Phi_noCorrL1_v18',
    'HLT_Dimuon24_Upsilon_noCorrL1_v18',
    'HLT_Dimuon25_Jpsi_noCorrL1_v18',
    'HLT_Dimuon25_Jpsi_v26',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v18',
    'HLT_DoubleMu2_Jpsi_LowPt_v6',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v16',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v16',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v18',
    'HLT_DoubleMu3_Trk_Tau3mu_v24',
    'HLT_DoubleMu4_3_Bs_v27',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v12',
    'HLT_DoubleMu4_3_Jpsi_v27',
    'HLT_DoubleMu4_3_LowMass_SS_v6',
    'HLT_DoubleMu4_3_LowMass_v13',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v12',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v19',
    'HLT_DoubleMu4_JpsiTrk_Bc_v12',
    'HLT_DoubleMu4_Jpsi_Displaced_v19',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v19',
    'HLT_DoubleMu4_LowMass_Displaced_v13',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v27',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v16',
    'HLT_Mu25_TkMu0_Phi_v20',
    'HLT_Mu30_TkMu0_Psi_v13',
    'HLT_Mu30_TkMu0_Upsilon_v13',
    'HLT_Mu4_L1DoubleMu_v13',
    'HLT_Mu7p5_L2Mu2_Jpsi_v22',
    'HLT_Mu7p5_L2Mu2_Upsilon_v22',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v16',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v17',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v14' ),
  ParkingDoubleMuonLowMass7 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v17',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v19',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v19',
    'HLT_Dimuon0_Jpsi_NoVertexing_v20',
    'HLT_Dimuon0_Jpsi_v20',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v20',
    'HLT_Dimuon0_LowMass_L1_4_v20',
    'HLT_Dimuon0_LowMass_L1_TM530_v18',
    'HLT_Dimuon0_LowMass_v20',
    'HLT_Dimuon0_Upsilon_L1_4p5_v21',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v19',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v21',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v18',
    'HLT_Dimuon0_Upsilon_NoVertexing_v19',
    'HLT_Dimuon10_Upsilon_y1p4_v13',
    'HLT_Dimuon12_Upsilon_y1p4_v14',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v19',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v17',
    'HLT_Dimuon14_PsiPrime_v25',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v18',
    'HLT_Dimuon18_PsiPrime_v26',
    'HLT_Dimuon24_Phi_noCorrL1_v18',
    'HLT_Dimuon24_Upsilon_noCorrL1_v18',
    'HLT_Dimuon25_Jpsi_noCorrL1_v18',
    'HLT_Dimuon25_Jpsi_v26',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v18',
    'HLT_DoubleMu2_Jpsi_LowPt_v6',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v16',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v16',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v18',
    'HLT_DoubleMu3_Trk_Tau3mu_v24',
    'HLT_DoubleMu4_3_Bs_v27',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v12',
    'HLT_DoubleMu4_3_Jpsi_v27',
    'HLT_DoubleMu4_3_LowMass_SS_v6',
    'HLT_DoubleMu4_3_LowMass_v13',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v12',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v19',
    'HLT_DoubleMu4_JpsiTrk_Bc_v12',
    'HLT_DoubleMu4_Jpsi_Displaced_v19',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v19',
    'HLT_DoubleMu4_LowMass_Displaced_v13',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v27',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v16',
    'HLT_Mu25_TkMu0_Phi_v20',
    'HLT_Mu30_TkMu0_Psi_v13',
    'HLT_Mu30_TkMu0_Upsilon_v13',
    'HLT_Mu4_L1DoubleMu_v13',
    'HLT_Mu7p5_L2Mu2_Jpsi_v22',
    'HLT_Mu7p5_L2Mu2_Upsilon_v22',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v16',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v17',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v14' ),
  ParkingHH = cms.vstring( 'HLT_PFHT250_QuadPFJet25_PNet1BTag0p20_PNet1Tauh0p50_v6',
    'HLT_PFHT250_QuadPFJet25_PNet2BTagMean0p55_v6',
    'HLT_PFHT250_QuadPFJet25_v6',
    'HLT_PFHT250_QuadPFJet30_PNet1BTag0p20_PNet1Tauh0p50_v6',
    'HLT_PFHT250_QuadPFJet30_PNet2BTagMean0p55_v6',
    'HLT_PFHT280_QuadPFJet30_PNet1BTag0p20_PNet1Tauh0p50_v6',
    'HLT_PFHT280_QuadPFJet30_PNet2BTagMean0p55_v9',
    'HLT_PFHT280_QuadPFJet30_PNet2BTagMean0p60_v9',
    'HLT_PFHT280_QuadPFJet30_v9',
    'HLT_PFHT280_QuadPFJet35_PNet2BTagMean0p60_v9',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_PNet3BTag_2p0_v5',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_PNet3BTag_4p3_v5',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_v13',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_v21',
    'HLT_PFHT340_QuadPFJet70_50_40_40_PNet2BTagMean0p70_v10',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_PNet2BTag_4p3_v6',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_PNet2BTag_5p6_v6',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_v6',
    'HLT_PFHT400_SixPFJet32_PNet2BTagMean0p50_v9',
    'HLT_PFHT400_SixPFJet32_v21',
    'HLT_PFHT450_SixPFJet36_PNetBTag0p35_v9',
    'HLT_PFHT450_SixPFJet36_v20' ),
  ParkingLLP = cms.vstring( 'HLT_HT350_DelayedJet40_SingleDelay1p5To3p5nsInclusive_v7',
    'HLT_HT350_DelayedJet40_SingleDelay1p6To3p5nsInclusive_v7',
    'HLT_HT350_DelayedJet40_SingleDelay1p75To3p5nsInclusive_v7',
    'HLT_HT360_DisplacedDijet40_Inclusive1PtrkShortSig5_v7',
    'HLT_HT360_DisplacedDijet45_Inclusive1PtrkShortSig5_v7',
    'HLT_HT390_DisplacedDijet40_Inclusive1PtrkShortSig5_v7',
    'HLT_HT390_DisplacedDijet45_Inclusive1PtrkShortSig5_v7',
    'HLT_HT390eta2p0_DisplacedDijet40_Inclusive1PtrkShortSig5_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1To1p5nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1p1To1p6nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1p25To1p75nsInclusive_v7',
    'HLT_HT430_DisplacedDijet40_DisplacedTrack_v23',
    'HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_v11',
    'HLT_HT650_DisplacedDijet60_Inclusive_v23',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5To4nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p6To4nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p75To4nsInclusive_v7' ),
  ParkingSingleMuon0 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v6',
    'HLT_Mu0_Barrel_L1HP11_v6',
    'HLT_Mu0_Barrel_L1HP6_IP6_v3',
    'HLT_Mu0_Barrel_L1HP6_v3',
    'HLT_Mu0_Barrel_L1HP7_v3',
    'HLT_Mu0_Barrel_L1HP8_v4',
    'HLT_Mu0_Barrel_L1HP9_v4',
    'HLT_Mu0_Barrel_v6',
    'HLT_Mu10_Barrel_L1HP11_IP6_v6',
    'HLT_Mu6_Barrel_L1HP7_IP6_v3',
    'HLT_Mu7_Barrel_L1HP8_IP6_v4',
    'HLT_Mu8_Barrel_L1HP9_IP6_v4',
    'HLT_Mu9_Barrel_L1HP10_IP6_v6' ),
  ParkingSingleMuon1 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v6',
    'HLT_Mu0_Barrel_L1HP11_v6',
    'HLT_Mu0_Barrel_L1HP6_IP6_v3',
    'HLT_Mu0_Barrel_L1HP6_v3',
    'HLT_Mu0_Barrel_L1HP7_v3',
    'HLT_Mu0_Barrel_L1HP8_v4',
    'HLT_Mu0_Barrel_L1HP9_v4',
    'HLT_Mu0_Barrel_v6',
    'HLT_Mu10_Barrel_L1HP11_IP6_v6',
    'HLT_Mu6_Barrel_L1HP7_IP6_v3',
    'HLT_Mu7_Barrel_L1HP8_IP6_v4',
    'HLT_Mu8_Barrel_L1HP9_IP6_v4',
    'HLT_Mu9_Barrel_L1HP10_IP6_v6' ),
  ParkingSingleMuon10 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v6',
    'HLT_Mu0_Barrel_L1HP11_v6',
    'HLT_Mu0_Barrel_L1HP6_IP6_v3',
    'HLT_Mu0_Barrel_L1HP6_v3',
    'HLT_Mu0_Barrel_L1HP7_v3',
    'HLT_Mu0_Barrel_L1HP8_v4',
    'HLT_Mu0_Barrel_L1HP9_v4',
    'HLT_Mu0_Barrel_v6',
    'HLT_Mu10_Barrel_L1HP11_IP6_v6',
    'HLT_Mu6_Barrel_L1HP7_IP6_v3',
    'HLT_Mu7_Barrel_L1HP8_IP6_v4',
    'HLT_Mu8_Barrel_L1HP9_IP6_v4',
    'HLT_Mu9_Barrel_L1HP10_IP6_v6' ),
  ParkingSingleMuon11 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v6',
    'HLT_Mu0_Barrel_L1HP11_v6',
    'HLT_Mu0_Barrel_L1HP6_IP6_v3',
    'HLT_Mu0_Barrel_L1HP6_v3',
    'HLT_Mu0_Barrel_L1HP7_v3',
    'HLT_Mu0_Barrel_L1HP8_v4',
    'HLT_Mu0_Barrel_L1HP9_v4',
    'HLT_Mu0_Barrel_v6',
    'HLT_Mu10_Barrel_L1HP11_IP6_v6',
    'HLT_Mu6_Barrel_L1HP7_IP6_v3',
    'HLT_Mu7_Barrel_L1HP8_IP6_v4',
    'HLT_Mu8_Barrel_L1HP9_IP6_v4',
    'HLT_Mu9_Barrel_L1HP10_IP6_v6' ),
  ParkingSingleMuon2 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v6',
    'HLT_Mu0_Barrel_L1HP11_v6',
    'HLT_Mu0_Barrel_L1HP6_IP6_v3',
    'HLT_Mu0_Barrel_L1HP6_v3',
    'HLT_Mu0_Barrel_L1HP7_v3',
    'HLT_Mu0_Barrel_L1HP8_v4',
    'HLT_Mu0_Barrel_L1HP9_v4',
    'HLT_Mu0_Barrel_v6',
    'HLT_Mu10_Barrel_L1HP11_IP6_v6',
    'HLT_Mu6_Barrel_L1HP7_IP6_v3',
    'HLT_Mu7_Barrel_L1HP8_IP6_v4',
    'HLT_Mu8_Barrel_L1HP9_IP6_v4',
    'HLT_Mu9_Barrel_L1HP10_IP6_v6' ),
  ParkingSingleMuon3 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v6',
    'HLT_Mu0_Barrel_L1HP11_v6',
    'HLT_Mu0_Barrel_L1HP6_IP6_v3',
    'HLT_Mu0_Barrel_L1HP6_v3',
    'HLT_Mu0_Barrel_L1HP7_v3',
    'HLT_Mu0_Barrel_L1HP8_v4',
    'HLT_Mu0_Barrel_L1HP9_v4',
    'HLT_Mu0_Barrel_v6',
    'HLT_Mu10_Barrel_L1HP11_IP6_v6',
    'HLT_Mu6_Barrel_L1HP7_IP6_v3',
    'HLT_Mu7_Barrel_L1HP8_IP6_v4',
    'HLT_Mu8_Barrel_L1HP9_IP6_v4',
    'HLT_Mu9_Barrel_L1HP10_IP6_v6' ),
  ParkingSingleMuon4 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v6',
    'HLT_Mu0_Barrel_L1HP11_v6',
    'HLT_Mu0_Barrel_L1HP6_IP6_v3',
    'HLT_Mu0_Barrel_L1HP6_v3',
    'HLT_Mu0_Barrel_L1HP7_v3',
    'HLT_Mu0_Barrel_L1HP8_v4',
    'HLT_Mu0_Barrel_L1HP9_v4',
    'HLT_Mu0_Barrel_v6',
    'HLT_Mu10_Barrel_L1HP11_IP6_v6',
    'HLT_Mu6_Barrel_L1HP7_IP6_v3',
    'HLT_Mu7_Barrel_L1HP8_IP6_v4',
    'HLT_Mu8_Barrel_L1HP9_IP6_v4',
    'HLT_Mu9_Barrel_L1HP10_IP6_v6' ),
  ParkingSingleMuon5 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v6',
    'HLT_Mu0_Barrel_L1HP11_v6',
    'HLT_Mu0_Barrel_L1HP6_IP6_v3',
    'HLT_Mu0_Barrel_L1HP6_v3',
    'HLT_Mu0_Barrel_L1HP7_v3',
    'HLT_Mu0_Barrel_L1HP8_v4',
    'HLT_Mu0_Barrel_L1HP9_v4',
    'HLT_Mu0_Barrel_v6',
    'HLT_Mu10_Barrel_L1HP11_IP6_v6',
    'HLT_Mu6_Barrel_L1HP7_IP6_v3',
    'HLT_Mu7_Barrel_L1HP8_IP6_v4',
    'HLT_Mu8_Barrel_L1HP9_IP6_v4',
    'HLT_Mu9_Barrel_L1HP10_IP6_v6' ),
  ParkingSingleMuon6 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v6',
    'HLT_Mu0_Barrel_L1HP11_v6',
    'HLT_Mu0_Barrel_L1HP6_IP6_v3',
    'HLT_Mu0_Barrel_L1HP6_v3',
    'HLT_Mu0_Barrel_L1HP7_v3',
    'HLT_Mu0_Barrel_L1HP8_v4',
    'HLT_Mu0_Barrel_L1HP9_v4',
    'HLT_Mu0_Barrel_v6',
    'HLT_Mu10_Barrel_L1HP11_IP6_v6',
    'HLT_Mu6_Barrel_L1HP7_IP6_v3',
    'HLT_Mu7_Barrel_L1HP8_IP6_v4',
    'HLT_Mu8_Barrel_L1HP9_IP6_v4',
    'HLT_Mu9_Barrel_L1HP10_IP6_v6' ),
  ParkingSingleMuon7 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v6',
    'HLT_Mu0_Barrel_L1HP11_v6',
    'HLT_Mu0_Barrel_L1HP6_IP6_v3',
    'HLT_Mu0_Barrel_L1HP6_v3',
    'HLT_Mu0_Barrel_L1HP7_v3',
    'HLT_Mu0_Barrel_L1HP8_v4',
    'HLT_Mu0_Barrel_L1HP9_v4',
    'HLT_Mu0_Barrel_v6',
    'HLT_Mu10_Barrel_L1HP11_IP6_v6',
    'HLT_Mu6_Barrel_L1HP7_IP6_v3',
    'HLT_Mu7_Barrel_L1HP8_IP6_v4',
    'HLT_Mu8_Barrel_L1HP9_IP6_v4',
    'HLT_Mu9_Barrel_L1HP10_IP6_v6' ),
  ParkingSingleMuon8 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v6',
    'HLT_Mu0_Barrel_L1HP11_v6',
    'HLT_Mu0_Barrel_L1HP6_IP6_v3',
    'HLT_Mu0_Barrel_L1HP6_v3',
    'HLT_Mu0_Barrel_L1HP7_v3',
    'HLT_Mu0_Barrel_L1HP8_v4',
    'HLT_Mu0_Barrel_L1HP9_v4',
    'HLT_Mu0_Barrel_v6',
    'HLT_Mu10_Barrel_L1HP11_IP6_v6',
    'HLT_Mu6_Barrel_L1HP7_IP6_v3',
    'HLT_Mu7_Barrel_L1HP8_IP6_v4',
    'HLT_Mu8_Barrel_L1HP9_IP6_v4',
    'HLT_Mu9_Barrel_L1HP10_IP6_v6' ),
  ParkingSingleMuon9 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v6',
    'HLT_Mu0_Barrel_L1HP11_v6',
    'HLT_Mu0_Barrel_L1HP6_IP6_v3',
    'HLT_Mu0_Barrel_L1HP6_v3',
    'HLT_Mu0_Barrel_L1HP7_v3',
    'HLT_Mu0_Barrel_L1HP8_v4',
    'HLT_Mu0_Barrel_L1HP9_v4',
    'HLT_Mu0_Barrel_v6',
    'HLT_Mu10_Barrel_L1HP11_IP6_v6',
    'HLT_Mu6_Barrel_L1HP7_IP6_v3',
    'HLT_Mu7_Barrel_L1HP8_IP6_v4',
    'HLT_Mu8_Barrel_L1HP9_IP6_v4',
    'HLT_Mu9_Barrel_L1HP10_IP6_v6' ),
  ParkingVBF0 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v10',
    'HLT_QuadPFJet100_88_70_30_v10',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet103_88_75_15_v17',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v10',
    'HLT_QuadPFJet105_88_75_30_v9',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet105_88_76_15_v17',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet111_90_80_15_v17',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v10',
    'HLT_QuadPFJet111_90_80_30_v9',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v8',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v6',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v6',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v6',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v6',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v6',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v6',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v6',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v6',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v6',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v6',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v6',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v6',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v6',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v6',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v6',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v13',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v6' ),
  ParkingVBF1 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v10',
    'HLT_QuadPFJet100_88_70_30_v10',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet103_88_75_15_v17',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v10',
    'HLT_QuadPFJet105_88_75_30_v9',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet105_88_76_15_v17',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet111_90_80_15_v17',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v10',
    'HLT_QuadPFJet111_90_80_30_v9',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v8',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v6',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v6',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v6',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v6',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v6',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v6',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v6',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v6',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v6',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v6',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v6',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v6',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v6',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v6',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v6',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v13',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v6' ),
  ParkingVBF2 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v10',
    'HLT_QuadPFJet100_88_70_30_v10',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet103_88_75_15_v17',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v10',
    'HLT_QuadPFJet105_88_75_30_v9',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet105_88_76_15_v17',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet111_90_80_15_v17',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v10',
    'HLT_QuadPFJet111_90_80_30_v9',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v8',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v6',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v6',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v6',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v6',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v6',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v6',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v6',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v6',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v6',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v6',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v6',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v6',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v6',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v6',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v6',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v13',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v6' ),
  ParkingVBF3 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v10',
    'HLT_QuadPFJet100_88_70_30_v10',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet103_88_75_15_v17',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v10',
    'HLT_QuadPFJet105_88_75_30_v9',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet105_88_76_15_v17',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet111_90_80_15_v17',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v10',
    'HLT_QuadPFJet111_90_80_30_v9',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v8',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v6',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v6',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v6',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v6',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v6',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v6',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v6',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v6',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v6',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v6',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v6',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v6',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v6',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v6',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v6',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v13',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v6' ),
  ParkingVBF4 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v10',
    'HLT_QuadPFJet100_88_70_30_v10',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet103_88_75_15_v17',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v10',
    'HLT_QuadPFJet105_88_75_30_v9',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet105_88_76_15_v17',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet111_90_80_15_v17',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v10',
    'HLT_QuadPFJet111_90_80_30_v9',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v8',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v6',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v6',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v6',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v6',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v6',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v6',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v6',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v6',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v6',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v6',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v6',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v6',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v6',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v6',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v6',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v13',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v6' ),
  ParkingVBF5 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v10',
    'HLT_QuadPFJet100_88_70_30_v10',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet103_88_75_15_v17',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v10',
    'HLT_QuadPFJet105_88_75_30_v9',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet105_88_76_15_v17',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet111_90_80_15_v17',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v10',
    'HLT_QuadPFJet111_90_80_30_v9',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v8',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v6',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v6',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v6',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v6',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v6',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v6',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v6',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v6',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v6',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v6',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v6',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v6',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v6',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v6',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v6',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v13',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v6' ),
  ParkingVBF6 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v10',
    'HLT_QuadPFJet100_88_70_30_v10',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet103_88_75_15_v17',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v10',
    'HLT_QuadPFJet105_88_75_30_v9',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet105_88_76_15_v17',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet111_90_80_15_v17',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v10',
    'HLT_QuadPFJet111_90_80_30_v9',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v8',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v6',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v6',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v6',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v6',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v6',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v6',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v6',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v6',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v6',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v6',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v6',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v6',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v6',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v6',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v6',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v13',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v6' ),
  ParkingVBF7 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v10',
    'HLT_QuadPFJet100_88_70_30_v10',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet103_88_75_15_v17',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v10',
    'HLT_QuadPFJet105_88_75_30_v9',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet105_88_76_15_v17',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v6',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v6',
    'HLT_QuadPFJet111_90_80_15_v17',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v10',
    'HLT_QuadPFJet111_90_80_30_v9',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v8',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v6',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v6',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v6',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v6',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v6',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v6',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v6',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v6',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v6',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v6',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v6',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v6',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v6',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v6',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v6',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v13',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v6' ),
  RPCMonitor = cms.vstring( 'AlCa_RPCMuonNormalisation_v23' ),
  ScoutingPFMonitor = cms.vstring( 'DST_PFScouting_AXOLoose_v4',
    'DST_PFScouting_AXONominal_v6',
    'DST_PFScouting_AXOTight_v6',
    'DST_PFScouting_AXOVLoose_v4',
    'DST_PFScouting_AXOVTight_v4',
    'DST_PFScouting_CICADALoose_v2',
    'DST_PFScouting_CICADAMedium_v2',
    'DST_PFScouting_CICADATight_v2',
    'DST_PFScouting_CICADAVLoose_v2',
    'DST_PFScouting_CICADAVTight_v2',
    'DST_PFScouting_DoubleEG_v6',
    'DST_PFScouting_DoubleMuon_v6',
    'DST_PFScouting_JetHT_v6',
    'DST_PFScouting_SingleMuon_v6',
    'DST_PFScouting_SinglePhotonEB_v3',
    'DST_PFScouting_ZeroBias_v4' ),
  ScoutingPFRun3 = cms.vstring( 'DST_PFScouting_AXOLoose_v4',
    'DST_PFScouting_AXONominal_v6',
    'DST_PFScouting_AXOTight_v6',
    'DST_PFScouting_AXOVLoose_v4',
    'DST_PFScouting_AXOVTight_v4',
    'DST_PFScouting_CICADALoose_v2',
    'DST_PFScouting_CICADAMedium_v2',
    'DST_PFScouting_CICADATight_v2',
    'DST_PFScouting_CICADAVLoose_v2',
    'DST_PFScouting_CICADAVTight_v2',
    'DST_PFScouting_DoubleEG_v6',
    'DST_PFScouting_DoubleMuon_v6',
    'DST_PFScouting_JetHT_v6',
    'DST_PFScouting_SingleMuon_v6',
    'DST_PFScouting_SinglePhotonEB_v3',
    'DST_PFScouting_ZeroBias_v4' ),
  Tau = cms.vstring( 'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_noDxy_v8',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_v13',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS36_Trk1_eta2p1_v8',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_v8',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_v12',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_v12',
    'HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_v12',
    'HLT_DoublePNetTauhPFJet26_L2NN_eta2p3_PFJet60_v6',
    'HLT_DoublePNetTauhPFJet26_L2NN_eta2p3_PFJet75_v6',
    'HLT_DoublePNetTauhPFJet30_Medium_L2NN_eta2p3_v6',
    'HLT_DoublePNetTauhPFJet30_Tight_L2NN_eta2p3_v6',
    'HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_v13',
    'HLT_SinglePNetTauhPFJet130_Loose_L2NN_eta2p3_v6',
    'HLT_SinglePNetTauhPFJet130_Medium_L2NN_eta2p3_v6',
    'HLT_SinglePNetTauhPFJet130_Tight_L2NN_eta2p3_v6' ),
  TestEnablesEcalHcal = cms.vstring( 'HLT_EcalCalibration_v4',
    'HLT_HcalCalibration_v6' ),
  TestEnablesEcalHcalDQM = cms.vstring( 'HLT_EcalCalibration_v4',
    'HLT_HcalCalibration_v6' ),
  ZeroBias = cms.vstring( 'HLT_Random_v3',
    'HLT_ZeroBias_Alignment_v8',
    'HLT_ZeroBias_FirstBXAfterTrain_v10',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v12',
    'HLT_ZeroBias_FirstCollisionInTrain_v11',
    'HLT_ZeroBias_IsolatedBunches_v12',
    'HLT_ZeroBias_LastCollisionInTrain_v10',
    'HLT_ZeroBias_v13' )
)

fragment.CSCChannelMapperESSource = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "CSCChannelMapperRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
fragment.CSCINdexerESSource = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "CSCIndexerRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
fragment.GlobalParametersRcdSource = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "L1TGlobalParametersRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
fragment.HcalTimeSlewEP = cms.ESSource( "HcalTimeSlewEP",
    appendToDataLabel = cms.string( "HBHE" ),
    timeSlewParametersM2 = cms.VPSet( 
      cms.PSet(  tmax = cms.double( 16.0 ),
        tzero = cms.double( 23.960177 ),
        slope = cms.double( -3.178648 )
      ),
      cms.PSet(  tmax = cms.double( 10.0 ),
        tzero = cms.double( 11.977461 ),
        slope = cms.double( -1.5610227 )
      ),
      cms.PSet(  tmax = cms.double( 6.25 ),
        tzero = cms.double( 9.109694 ),
        slope = cms.double( -1.075824 )
      )
    ),
    timeSlewParametersM3 = cms.VPSet( 
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 0.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -2.19142 ),
        tspar0 = cms.double( 12.2999 ),
        tspar1_siPM = cms.double( 0.0 )
      ),
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 32.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -3.2 ),
        tspar0 = cms.double( 15.5 ),
        tspar1_siPM = cms.double( 0.0 )
      ),
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 0.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -2.19142 ),
        tspar0 = cms.double( 12.2999 ),
        tspar1_siPM = cms.double( 0.0 )
      ),
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 0.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -2.19142 ),
        tspar0 = cms.double( 12.2999 ),
        tspar1_siPM = cms.double( 0.0 )
      )
    )
)
fragment.ecalMultifitParametersSource = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "EcalMultifitParametersRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
fragment.hltESSBTagRecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "JetTagComputerRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
fragment.hltESSEcalSeverityLevel = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "EcalSeverityLevelAlgoRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
fragment.hltESSHcalSeverityLevel = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "HcalSeverityLevelComputerRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
fragment.hltESSJobConfigurationGPURecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "JobConfigurationGPURecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
fragment.hltESSPFRecHitHCALParamsRecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "PFRecHitHCALParamsRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
fragment.hltESSPFRecHitHCALTopologyRecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "PFRecHitHCALTopologyRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
fragment.hltESSTfGraphRecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "TfGraphRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
fragment.ppsPixelTopologyESSource = cms.ESSource( "PPSPixelTopologyESSource",
    RunType = cms.string( "Run3" ),
    PitchSimY = cms.double( 0.15 ),
    PitchSimX = cms.double( 0.1 ),
    thickness = cms.double( 0.23 ),
    noOfPixelSimX = cms.int32( 160 ),
    noOfPixelSimY = cms.int32( 104 ),
    noOfPixels = cms.int32( 16640 ),
    simXWidth = cms.double( 16.6 ),
    simYWidth = cms.double( 16.2 ),
    deadEdgeWidth = cms.double( 0.2 ),
    activeEdgeSigma = cms.double( 0.02 ),
    physActiveEdgeDist = cms.double( 0.15 ),
    appendToDataLabel = cms.string( "" )
)

fragment.hltESPTrajectoryCleanerBySharedHitsP5 = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTrajectoryCleanerBySharedHitsP5" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.19 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
fragment.hltESFittingSmootherRKP5 = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESFittingSmootherRKP5" ),
  Fitter = cms.string( "hltESPRKTrajectoryFitter" ),
  Smoother = cms.string( "hltESPRKTrajectorySmoother" ),
  EstimateCut = cms.double( 20.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 4 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( 0.0 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESChi2MeasurementEstimatorForP5 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 100.0 ),
  nSigma = cms.double( 4.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 100000.0 ),
  ComponentName = cms.string( "hltESChi2MeasurementEstimatorForP5" ),
  appendToDataLabel = cms.string( "" )
)
fragment.AnyDirectionAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "AnyDirectionAnalyticalPropagator" ),
  PropagationDirection = cms.string( "anyDirection" )
)
fragment.CSCChannelMapperESProducer = cms.ESProducer( "CSCChannelMapperESProducer",
  AlgoName = cms.string( "CSCChannelMapperPostls1" )
)
fragment.CSCIndexerESProducer = cms.ESProducer( "CSCIndexerESProducer",
  AlgoName = cms.string( "CSCIndexerPostls1" )
)
fragment.CSCObjectMapESProducer = cms.ESProducer( "CSCObjectMapESProducer",
  appendToDataLabel = cms.string( "" )
)
fragment.CaloTopologyBuilder = cms.ESProducer( "CaloTopologyBuilder" )
fragment.CaloTowerConstituentsMapBuilder = cms.ESProducer( "CaloTowerConstituentsMapBuilder",
  MapFile = cms.untracked.string( "Geometry/CaloTopology/data/CaloTowerEEGeometric.map.gz" ),
  MapAuto = cms.untracked.bool( False ),
  SkipHE = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
fragment.CaloTowerTopologyEP = cms.ESProducer( "CaloTowerTopologyEP",
  appendToDataLabel = cms.string( "" )
)
fragment.CastorDbProducer = cms.ESProducer( "CastorDbProducer",
  appendToDataLabel = cms.string( "" )
)
fragment.ClusterShapeHitFilterESProducer = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "ClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.DTObjectMapESProducer = cms.ESProducer( "DTObjectMapESProducer",
  appendToDataLabel = cms.string( "" )
)
fragment.GlobalParameters = cms.ESProducer( "StableParametersTrivialProducer",
  TotalBxInEvent = cms.int32( 5 ),
  NumberPhysTriggers = cms.uint32( 512 ),
  NumberL1Muon = cms.uint32( 8 ),
  NumberL1EGamma = cms.uint32( 12 ),
  NumberL1Jet = cms.uint32( 12 ),
  NumberL1Tau = cms.uint32( 12 ),
  NumberChips = cms.uint32( 1 ),
  PinsOnChip = cms.uint32( 512 ),
  OrderOfChip = cms.vint32( 1 ),
  NumberL1IsoEG = cms.uint32( 4 ),
  NumberL1JetCounts = cms.uint32( 12 ),
  UnitLength = cms.int32( 8 ),
  NumberL1ForJet = cms.uint32( 4 ),
  IfCaloEtaNumberBits = cms.uint32( 4 ),
  IfMuEtaNumberBits = cms.uint32( 6 ),
  NumberL1TauJet = cms.uint32( 4 ),
  NumberL1Mu = cms.uint32( 4 ),
  NumberConditionChips = cms.uint32( 1 ),
  NumberPsbBoards = cms.int32( 7 ),
  NumberL1CenJet = cms.uint32( 4 ),
  PinsOnConditionChip = cms.uint32( 512 ),
  NumberL1NoIsoEG = cms.uint32( 4 ),
  NumberTechnicalTriggers = cms.uint32( 64 ),
  NumberPhysTriggersExtended = cms.uint32( 64 ),
  WordLength = cms.int32( 64 ),
  OrderConditionChip = cms.vint32( 1 ),
  appendToDataLabel = cms.string( "" )
)
fragment.MaterialPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterial" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
fragment.MaterialPropagatorForHI = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialForHI" ),
  Mass = cms.double( 0.139 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
fragment.MaterialPropagatorParabolicMF = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
fragment.OppositeMaterialPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialOpposite" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
fragment.OppositeMaterialPropagatorForHI = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialOppositeForHI" ),
  Mass = cms.double( 0.139 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
fragment.OppositeMaterialPropagatorParabolicMF = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
fragment.OppositePropagatorWithMaterialForMixedStep = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialForMixedStepOpposite" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( 0.1 )
)
fragment.PropagatorWithMaterialForLoopers = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 4.0 ),
  ComponentName = cms.string( "PropagatorWithMaterialForLoopers" ),
  Mass = cms.double( 0.1396 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
fragment.PropagatorWithMaterialForMixedStep = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialForMixedStep" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( 0.1 )
)
fragment.SiPixelTemplateStoreESProducer = cms.ESProducer( "SiPixelTemplateStoreESProducer",
  appendToDataLabel = cms.string( "" )
)
fragment.SiStripClusterizerConditionsESProducer = cms.ESProducer( "SiStripClusterizerConditionsESProducer",
  QualityLabel = cms.string( "" ),
  Label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
fragment.SiStripRegionConnectivity = cms.ESProducer( "SiStripRegionConnectivity",
  EtaDivisions = cms.untracked.uint32( 20 ),
  PhiDivisions = cms.untracked.uint32( 20 ),
  EtaMax = cms.untracked.double( 2.5 )
)
fragment.SimpleSecondaryVertex3TrkComputer = cms.ESProducer( "SimpleSecondaryVertexESProducer",
  use3d = cms.bool( True ),
  unBoost = cms.bool( False ),
  useSignificance = cms.bool( True ),
  minTracks = cms.uint32( 3 ),
  minVertices = cms.uint32( 1 )
)
fragment.SteppingHelixPropagatorAny = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "SteppingHelixPropagatorAny" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "anyDirection" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
fragment.TransientTrackBuilderESProducer = cms.ESProducer( "TransientTrackBuilderESProducer",
  ComponentName = cms.string( "TransientTrackBuilder" )
)
fragment.caloDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "CaloDetIdAssociator" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 70 ),
  nPhi = cms.int32( 72 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
fragment.cosmicsNavigationSchoolESProducer = cms.ESProducer( "NavigationSchoolESProducer",
  ComponentName = cms.string( "CosmicNavigationSchool" ),
  PluginName = cms.string( "" ),
  SimpleMagneticField = cms.string( "" )
)
fragment.ctppsGeometryESModule = cms.ESProducer( "CTPPSGeometryESModule",
  verbosity = cms.untracked.uint32( 1 ),
  buildMisalignedGeometry = cms.bool( False ),
  isRun2 = cms.bool( False ),
  dbTag = cms.string( "" ),
  compactViewTag = cms.string( "" ),
  fromPreprocessedDB = cms.untracked.bool( True ),
  fromDD4hep = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
fragment.ctppsInterpolatedOpticalFunctionsESSource = cms.ESProducer( "CTPPSInterpolatedOpticalFunctionsESSource",
  lhcInfoLabel = cms.string( "" ),
  lhcInfoPerFillLabel = cms.string( "" ),
  lhcInfoPerLSLabel = cms.string( "" ),
  opticsLabel = cms.string( "" ),
  useNewLHCInfo = cms.bool( True ),
  appendToDataLabel = cms.string( "" )
)
fragment.ecalDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "EcalDetIdAssociator" ),
  etaBinSize = cms.double( 0.02 ),
  nEta = cms.int32( 300 ),
  nPhi = cms.int32( 360 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
fragment.ecalElectronicsMappingHostESProducer = cms.ESProducer( "EcalElectronicsMappingHostESProducer@alpaka",
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
fragment.ecalMultifitConditionsHostESProducer = cms.ESProducer( "EcalMultifitConditionsHostESProducer@alpaka",
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
fragment.ecalMultifitParametersHostESProducer = cms.ESProducer( "EcalMultifitParametersHostESProducer@alpaka",
  EBtimeFitParameters = cms.vdouble( -2.015452, 3.130702, -12.3473, 41.88921, -82.83944, 91.01147, -50.35761, 11.05621 ),
  EEtimeFitParameters = cms.vdouble( -2.390548, 3.553628, -17.62341, 67.67538, -133.213, 140.7432, -75.41106, 16.20277 ),
  EBamplitudeFitParameters = cms.vdouble( 1.138, 1.652 ),
  EEamplitudeFitParameters = cms.vdouble( 1.89, 1.4 ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
fragment.ecalSeverityLevel = cms.ESProducer( "EcalSeverityLevelESProducer",
  flagMask = cms.PSet( 
    kBad = cms.vstring( 'kFaultyHardware',
      'kDead',
      'kKilled' ),
    kGood = cms.vstring( 'kGood' ),
    kRecovered = cms.vstring( 'kLeadingEdgeRecovered',
      'kTowerRecovered' ),
    kProblematic = cms.vstring( 'kPoorReco',
      'kPoorCalib',
      'kNoisy',
      'kSaturated' ),
    kWeird = cms.vstring( 'kWeird',
      'kDiWeird' ),
    kTime = cms.vstring( 'kOutOfTime' )
  ),
  dbstatusMask = cms.PSet( 
    kBad = cms.vstring( 'kNonRespondingIsolated',
      'kDeadVFE',
      'kDeadFE',
      'kNoDataNoTP' ),
    kGood = cms.vstring( 'kOk' ),
    kRecovered = cms.vstring(  ),
    kProblematic = cms.vstring( 'kDAC',
      'kNoLaser',
      'kNoisy',
      'kNNoisy',
      'kNNNoisy',
      'kNNNNoisy',
      'kNNNNNoisy',
      'kFixedG6',
      'kFixedG1',
      'kFixedG0' ),
    kWeird = cms.vstring(  ),
    kTime = cms.vstring(  )
  ),
  timeThresh = cms.double( 2.0 )
)
fragment.hcalChannelPropertiesESProd = cms.ESProducer( "HcalChannelPropertiesEP" )
fragment.hcalDDDRecConstants = cms.ESProducer( "HcalDDDRecConstantsESModule",
  appendToDataLabel = cms.string( "" )
)
fragment.hcalDDDSimConstants = cms.ESProducer( "HcalDDDSimConstantsESModule",
  appendToDataLabel = cms.string( "" )
)
fragment.hcalDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "HcalDetIdAssociator" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 70 ),
  nPhi = cms.int32( 72 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
fragment.hcalMahiConditionsESProducer = cms.ESProducer( "HcalMahiConditionsESProducer@alpaka",
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
fragment.hcalMahiPulseOffsetsESProducer = cms.ESProducer( "HcalMahiPulseOffsetsESProducer@alpaka",
  pulseOffsets = cms.vint32( -3, -2, -1, 0, 1, 2, 3, 4 ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
fragment.hcalRecAlgos = cms.ESProducer( "HcalRecAlgoESProducer",
  phase = cms.uint32( 1 ),
  RecoveredRecHitBits = cms.vstring( '' ),
  SeverityLevels = cms.VPSet( 
    cms.PSet(  ChannelStatus = cms.vstring( '' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 0 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellCaloTowerProb' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 1 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellExcludeFromHBHENoiseSummary' ),
      RecHitFlags = cms.vstring( 'HBHEIsolatedNoise',
        'HFAnomalousHit' ),
      Level = cms.int32( 5 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( '' ),
      RecHitFlags = cms.vstring( 'HBHEHpdHitMultiplicity',
        'HBHESpikeNoise',
        'HBHETS4TS5Noise',
        'HBHEOOTPU',
        'HBHEFlatNoise',
        'HBHENegativeNoise' ),
      Level = cms.int32( 8 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( '' ),
      RecHitFlags = cms.vstring( 'HFLongShort',
        'HFS8S1Ratio',
        'HFPET',
        'HFSignalAsymmetry' ),
      Level = cms.int32( 11 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellCaloTowerMask' ),
      RecHitFlags = cms.vstring(  ),
      Level = cms.int32( 12 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellHot' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 15 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellOff',
  'HcalCellDead' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 20 )
    )
  ),
  DropChannelStatusBits = cms.vstring( 'HcalCellMask',
    'HcalCellOff',
    'HcalCellDead' ),
  appendToDataLabel = cms.string( "" )
)
fragment.hcalRecoParamWithPulseShapeESProducer = cms.ESProducer( "HcalRecoParamWithPulseShapeESProducer@alpaka",
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
fragment.hcalSiPMCharacteristicsESProducer = cms.ESProducer( "HcalSiPMCharacteristicsESProducer@alpaka",
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
fragment.hltBoostedDoubleSecondaryVertexAK8Computer = cms.ESProducer( "CandidateBoostedDoubleSecondaryVertexESProducer",
  useCondDB = cms.bool( False ),
  weightFile = cms.FileInPath( "RecoBTag/SecondaryVertex/data/BoostedDoubleSV_AK8_BDT_v4.weights.xml.gz" ),
  useGBRForest = cms.bool( True ),
  useAdaBoost = cms.bool( False )
)
fragment.hltCombinedSecondaryVertex = cms.ESProducer( "CombinedSecondaryVertexESProducer",
  trackPseudoSelection = cms.PSet( 
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    ptMin = cms.double( 0.0 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    jetDeltaRMax = cms.double( 0.3 ),
    normChi2Max = cms.double( 99999.9 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip2dSigMin = cms.double( 2.0 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 )
  ),
  trackSelection = cms.PSet( 
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    ptMin = cms.double( 0.0 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    jetDeltaRMax = cms.double( 0.3 ),
    normChi2Max = cms.double( 99999.9 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip2dSigMin = cms.double( -99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 )
  ),
  trackFlip = cms.bool( False ),
  vertexFlip = cms.bool( False ),
  SoftLeptonFlip = cms.bool( False ),
  useTrackWeights = cms.bool( True ),
  pseudoMultiplicityMin = cms.uint32( 2 ),
  correctVertexMass = cms.bool( True ),
  trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.03 ) ),
  charmCut = cms.double( 1.5 ),
  minimumTrackWeight = cms.double( 0.5 ),
  pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
  trackMultiplicityMin = cms.uint32( 3 ),
  trackSort = cms.string( "sip2dSig" ),
  useCategories = cms.bool( True ),
  calibrationRecords = cms.vstring( 'CombinedSVRecoVertex',
    'CombinedSVPseudoVertex',
    'CombinedSVNoVertex' ),
  recordLabel = cms.string( "HLT" ),
  categoryVariableName = cms.string( "vertexCategory" )
)
fragment.hltCombinedSecondaryVertexV2 = cms.ESProducer( "CombinedSecondaryVertexESProducer",
  trackPseudoSelection = cms.PSet( 
    max_pT_dRcut = cms.double( 0.1 ),
    b_dR = cms.double( 0.6263 ),
    min_pT = cms.double( 120.0 ),
    b_pT = cms.double( 0.3684 ),
    ptMin = cms.double( 0.0 ),
    max_pT_trackPTcut = cms.double( 3.0 ),
    max_pT = cms.double( 500.0 ),
    useVariableJTA = cms.bool( False ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    normChi2Max = cms.double( 99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 ),
    a_dR = cms.double( -0.001053 ),
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    a_pT = cms.double( 0.005263 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    min_pT_dRcut = cms.double( 0.5 ),
    jetDeltaRMax = cms.double( 0.3 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip2dSigMin = cms.double( 2.0 )
  ),
  trackSelection = cms.PSet( 
    max_pT_dRcut = cms.double( 0.1 ),
    b_dR = cms.double( 0.6263 ),
    min_pT = cms.double( 120.0 ),
    b_pT = cms.double( 0.3684 ),
    ptMin = cms.double( 0.0 ),
    max_pT_trackPTcut = cms.double( 3.0 ),
    max_pT = cms.double( 500.0 ),
    useVariableJTA = cms.bool( False ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    normChi2Max = cms.double( 99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 ),
    a_dR = cms.double( -0.001053 ),
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    a_pT = cms.double( 0.005263 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    min_pT_dRcut = cms.double( 0.5 ),
    jetDeltaRMax = cms.double( 0.3 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip2dSigMin = cms.double( -99999.9 )
  ),
  trackFlip = cms.bool( False ),
  vertexFlip = cms.bool( False ),
  SoftLeptonFlip = cms.bool( False ),
  useTrackWeights = cms.bool( True ),
  pseudoMultiplicityMin = cms.uint32( 2 ),
  correctVertexMass = cms.bool( True ),
  trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.03 ) ),
  charmCut = cms.double( 1.5 ),
  minimumTrackWeight = cms.double( 0.5 ),
  pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
  trackMultiplicityMin = cms.uint32( 3 ),
  trackSort = cms.string( "sip2dSig" ),
  useCategories = cms.bool( True ),
  calibrationRecords = cms.vstring( 'CombinedSVIVFV2RecoVertex',
    'CombinedSVIVFV2PseudoVertex',
    'CombinedSVIVFV2NoVertex' ),
  recordLabel = cms.string( "HLT" ),
  categoryVariableName = cms.string( "vertexCategory" )
)
fragment.hltDisplacedDijethltESPPromptTrackCountingESProducer = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( True ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.1 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
fragment.hltDisplacedDijethltESPTrackCounting2D1st = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.05 ),
  useSignedImpactParameterSig = cms.bool( False ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
fragment.hltESPAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPAnalyticalPropagator" ),
  PropagationDirection = cms.string( "alongMomentum" )
)
fragment.hltESPBwdAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPBwdAnalyticalPropagator" ),
  PropagationDirection = cms.string( "oppositeToMomentum" )
)
fragment.hltESPBwdElectronPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPBwdElectronPropagator" ),
  Mass = cms.double( 5.11E-4 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
fragment.hltESPChi2ChargeLooseMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeLooseMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPChi2ChargeMeasurementEstimator2000 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 2000.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator2000" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPChi2ChargeMeasurementEstimator9ForHI = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator9ForHI" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutForHI" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPChi2ChargeTightMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeTightMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPChi2MeasurementEstimator100 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 40.0 ),
  nSigma = cms.double( 4.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1.0E12 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator100" ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPChi2MeasurementEstimator16 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator16" ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPChi2MeasurementEstimator30 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator30" ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPChi2MeasurementEstimator9 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator9" ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPCloseComponentsMerger5D = cms.ESProducer( "CloseComponentsMergerESProducer5D",
  ComponentName = cms.string( "hltESPCloseComponentsMerger5D" ),
  MaxComponents = cms.int32( 12 ),
  DistanceMeasure = cms.string( "hltESPKullbackLeiblerDistance5D" )
)
fragment.hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPDetachedQuadStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedQuadStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
fragment.hltESPDetachedStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
fragment.hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPDetachedTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedTripletStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
fragment.hltESPDisplacedDijethltPromptTrackCountingESProducer = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( True ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.1 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
fragment.hltESPDisplacedDijethltPromptTrackCountingESProducerLong = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( True ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.2 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
fragment.hltESPDisplacedDijethltPromptTrackCountingESProducerShortSig5 = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( False ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.05 ),
  maxImpactParameterSig = cms.double( 5.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
fragment.hltESPDisplacedDijethltTrackCounting2D1st = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.05 ),
  useSignedImpactParameterSig = cms.bool( False ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
fragment.hltESPDisplacedDijethltTrackCounting2D1stLoose = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.03 ),
  useSignedImpactParameterSig = cms.bool( False ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
fragment.hltESPDisplacedDijethltTrackCounting2D2ndLong = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.2 ),
  useSignedImpactParameterSig = cms.bool( True ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 2 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
fragment.hltESPDummyDetLayerGeometry = cms.ESProducer( "DetLayerGeometryESProducer",
  ComponentName = cms.string( "hltESPDummyDetLayerGeometry" )
)
fragment.hltESPElectronMaterialEffects = cms.ESProducer( "GsfMaterialEffectsESProducer",
  BetheHeitlerParametrization = cms.string( "BetheHeitler_cdfmom_nC6_O5.par" ),
  EnergyLossUpdator = cms.string( "GsfBetheHeitlerUpdator" ),
  ComponentName = cms.string( "hltESPElectronMaterialEffects" ),
  MultipleScatteringUpdator = cms.string( "MultipleScatteringUpdator" ),
  Mass = cms.double( 5.11E-4 ),
  BetheHeitlerCorrection = cms.int32( 2 )
)
fragment.hltESPFastSteppingHelixPropagatorAny = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "anyDirection" ),
  useTuningForL2Speed = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
fragment.hltESPFastSteppingHelixPropagatorOpposite = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useTuningForL2Speed = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
fragment.hltESPFittingSmootherIT = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFittingSmootherIT" ),
  Fitter = cms.string( "hltESPTrajectoryFitterRK" ),
  Smoother = cms.string( "hltESPTrajectorySmootherRK" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 3 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPFittingSmootherRK = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFittingSmootherRK" ),
  Fitter = cms.string( "hltESPTrajectoryFitterRK" ),
  Smoother = cms.string( "hltESPTrajectorySmootherRK" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPFlexibleKFFittingSmoother = cms.ESProducer( "FlexibleKFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFlexibleKFFittingSmoother" ),
  standardFitter = cms.string( "hltESPKFFittingSmootherWithOutliersRejectionAndRK" ),
  looperFitter = cms.string( "hltESPKFFittingSmootherForLoopers" ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPFwdElectronPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPFwdElectronPropagator" ),
  Mass = cms.double( 5.11E-4 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
fragment.hltESPGlobalDetLayerGeometry = cms.ESProducer( "GlobalDetLayerGeometryESProducer",
  ComponentName = cms.string( "hltESPGlobalDetLayerGeometry" )
)
fragment.hltESPGsfElectronFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPGsfElectronFittingSmoother" ),
  Fitter = cms.string( "hltESPGsfTrajectoryFitter" ),
  Smoother = cms.string( "hltESPGsfTrajectorySmoother" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPGsfTrajectoryFitter = cms.ESProducer( "GsfTrajectoryFitterESProducer",
  Merger = cms.string( "hltESPCloseComponentsMerger5D" ),
  ComponentName = cms.string( "hltESPGsfTrajectoryFitter" ),
  MaterialEffectsUpdator = cms.string( "hltESPElectronMaterialEffects" ),
  GeometricalPropagator = cms.string( "hltESPAnalyticalPropagator" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" )
)
fragment.hltESPGsfTrajectorySmoother = cms.ESProducer( "GsfTrajectorySmootherESProducer",
  Merger = cms.string( "hltESPCloseComponentsMerger5D" ),
  ComponentName = cms.string( "hltESPGsfTrajectorySmoother" ),
  MaterialEffectsUpdator = cms.string( "hltESPElectronMaterialEffects" ),
  ErrorRescaling = cms.double( 100.0 ),
  GeometricalPropagator = cms.string( "hltESPBwdAnalyticalPropagator" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" )
)
fragment.hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPInitialStepChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPInitialStepChi2MeasurementEstimator36 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 36.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPInitialStepChi2MeasurementEstimator36" ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPKFFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmoother" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitter" ),
  Smoother = cms.string( "hltESPKFTrajectorySmoother" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPKFFittingSmootherForL2Muon = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherForL2Muon" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitterForL2Muon" ),
  Smoother = cms.string( "hltESPKFTrajectorySmootherForL2Muon" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPKFFittingSmootherForLoopers = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherForLoopers" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitterForLoopers" ),
  Smoother = cms.string( "hltESPKFTrajectorySmootherForLoopers" ),
  EstimateCut = cms.double( 20.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 3 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -14.0 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPKFFittingSmootherWithOutliersRejectionAndRK = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherWithOutliersRejectionAndRK" ),
  Fitter = cms.string( "hltESPRKTrajectoryFitter" ),
  Smoother = cms.string( "hltESPRKTrajectorySmoother" ),
  EstimateCut = cms.double( 20.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 3 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -14.0 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPKFTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitter" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPKFTrajectoryFitterForL2Muon = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitterForL2Muon" ),
  Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPKFTrajectoryFitterForLoopers = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitterForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPKFTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmoother" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPKFTrajectorySmootherForL2Muon = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForL2Muon" ),
  Propagator = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPKFTrajectorySmootherForLoopers = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPKFTrajectorySmootherForMuonTrackLoader = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" ),
  Propagator = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPKFUpdator = cms.ESProducer( "KFUpdatorESProducer",
  ComponentName = cms.string( "hltESPKFUpdator" )
)
fragment.hltESPKullbackLeiblerDistance5D = cms.ESProducer( "DistanceBetweenComponentsESProducer5D",
  ComponentName = cms.string( "hltESPKullbackLeiblerDistance5D" ),
  DistanceMeasure = cms.string( "KullbackLeibler" )
)
fragment.hltESPL3MuKFTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
  Propagator = cms.string( "hltESPSmartPropagatorAny" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPLowPtQuadStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtQuadStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
fragment.hltESPLowPtStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
fragment.hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPLowPtTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtTripletStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
fragment.hltESPMeasurementTracker = cms.ESProducer( "MeasurementTrackerESProducer",
  ComponentName = cms.string( "hltESPMeasurementTracker" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  HitMatcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  SiStripQualityLabel = cms.string( "" ),
  UseStripModuleQualityDB = cms.bool( True ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  MaskBadAPVFibers = cms.bool( True ),
  UseStripStripQualityDB = cms.bool( True ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  badStripCuts = cms.PSet( 
    TOB = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TIB = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TID = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TEC = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    )
  ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPMixedStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "hltESPMixedStepClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPMixedStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPMixedStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
fragment.hltESPMixedTripletStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPMixedTripletStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPMixedTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPMixedTripletStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
fragment.hltESPMuonTransientTrackingRecHitBuilder = cms.ESProducer( "MuonTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
)
fragment.hltESPPFClusterParams = cms.ESProducer( "PFClusterParamsESProducer@alpaka",
  seedFinder = cms.PSet( 
    thresholdsByDetector = cms.VPSet( 
      cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
        seedingThreshold = cms.vdouble( 0.125, 0.25, 0.35, 0.35 ),
        detector = cms.string( "HCAL_BARREL1" )
      ),
      cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
        seedingThreshold = cms.vdouble( 0.1375, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275 ),
        detector = cms.string( "HCAL_ENDCAP" )
      )
    ),
    nNeighbours = cms.int32( 4 )
  ),
  initialClusteringStep = cms.PSet(  thresholdsByDetector = cms.VPSet( 
  cms.PSet(  gatheringThreshold = cms.vdouble( 0.1, 0.2, 0.3, 0.3 ),
    detector = cms.string( "HCAL_BARREL1" )
  ),
  cms.PSet(  gatheringThreshold = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
    detector = cms.string( "HCAL_ENDCAP" )
  )
) ),
  pfClusterBuilder = cms.PSet( 
    minFracTot = cms.double( 1.0E-20 ),
    stoppingTolerance = cms.double( 1.0E-8 ),
    positionCalc = cms.PSet( 
      minAllowedNormalization = cms.double( 1.0E-9 ),
      minFractionInCalc = cms.double( 1.0E-9 )
    ),
    maxIterations = cms.uint32( 5 ),
    recHitEnergyNorms = cms.VPSet( 
      cms.PSet(  recHitEnergyNorm = cms.vdouble( 0.1, 0.2, 0.3, 0.3 ),
        detector = cms.string( "HCAL_BARREL1" )
      ),
      cms.PSet(  recHitEnergyNorm = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
        detector = cms.string( "HCAL_ENDCAP" )
      )
    ),
    showerSigma = cms.double( 10.0 ),
    minFractionToKeep = cms.double( 1.0E-7 ),
    excludeOtherSeeds = cms.bool( True ),
    timeResolutionCalcBarrel = cms.PSet( 
      corrTermLowE = cms.double( 0.0 ),
      threshLowE = cms.double( 6.0 ),
      noiseTerm = cms.double( 21.86 ),
      constantTermLowE = cms.double( 4.24 ),
      noiseTermLowE = cms.double( 8.0 ),
      threshHighE = cms.double( 15.0 ),
      constantTerm = cms.double( 2.82 )
    ),
    timeResolutionCalcEndcap = cms.PSet( 
      corrTermLowE = cms.double( 0.0 ),
      threshLowE = cms.double( 6.0 ),
      noiseTerm = cms.double( 21.86 ),
      constantTermLowE = cms.double( 4.24 ),
      noiseTermLowE = cms.double( 8.0 ),
      threshHighE = cms.double( 15.0 ),
      constantTerm = cms.double( 2.82 )
    )
  ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
fragment.hltESPPFRecHitHCALParams = cms.ESProducer( "PFRecHitHCALParamsESProducer@alpaka",
  energyThresholdsHB = cms.vdouble( 0.1, 0.2, 0.3, 0.3 ),
  energyThresholdsHE = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
fragment.hltESPPFRecHitHCALTopology = cms.ESProducer( "PFRecHitHCALTopologyESProducer@alpaka",
  usePFThresholdsFromDB = cms.bool( True ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
fragment.hltESPPixelCPEFastParamsHIonPhase1 = cms.ESProducer( "PixelCPEFastParamsESProducerAlpakaHIonPhase1@alpaka",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( True ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  xerr_barrel_l1 = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_l1 = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_barrel_ln = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_ln = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_endcap = cms.vdouble( 0.002, 0.002 ),
  yerr_endcap = cms.vdouble( 0.0021 ),
  xerr_barrel_l1_def = cms.double( 0.0103 ),
  yerr_barrel_l1_def = cms.double( 0.0021 ),
  xerr_barrel_ln_def = cms.double( 0.0103 ),
  yerr_barrel_ln_def = cms.double( 0.0021 ),
  xerr_endcap_def = cms.double( 0.002 ),
  yerr_endcap_def = cms.double( 7.5E-4 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  ComponentName = cms.string( "PixelCPEFastParamsHIonPhase1" ),
  MagneticFieldRecord = cms.ESInputTag( "","" ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPPixelCPEFastParamsPhase1 = cms.ESProducer( "PixelCPEFastParamsESProducerAlpakaPhase1@alpaka",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( True ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  xerr_barrel_l1 = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_l1 = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_barrel_ln = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_ln = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_endcap = cms.vdouble( 0.002, 0.002 ),
  yerr_endcap = cms.vdouble( 0.0021 ),
  xerr_barrel_l1_def = cms.double( 0.0103 ),
  yerr_barrel_l1_def = cms.double( 0.0021 ),
  xerr_barrel_ln_def = cms.double( 0.0103 ),
  yerr_barrel_ln_def = cms.double( 0.0021 ),
  xerr_endcap_def = cms.double( 0.002 ),
  yerr_endcap_def = cms.double( 7.5E-4 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  ComponentName = cms.string( "PixelCPEFastParams" ),
  MagneticFieldRecord = cms.ESInputTag( "","" ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
fragment.hltESPPixelCPEGeneric = cms.ESProducer( "PixelCPEGenericESProducer",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( False ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  xerr_barrel_l1 = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_l1 = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_barrel_ln = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_ln = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_endcap = cms.vdouble( 0.002, 0.002 ),
  yerr_endcap = cms.vdouble( 0.0021 ),
  xerr_barrel_l1_def = cms.double( 0.0103 ),
  yerr_barrel_l1_def = cms.double( 0.0021 ),
  xerr_barrel_ln_def = cms.double( 0.0103 ),
  yerr_barrel_ln_def = cms.double( 0.0021 ),
  xerr_endcap_def = cms.double( 0.002 ),
  yerr_endcap_def = cms.double( 7.5E-4 ),
  eff_charge_cut_highX = cms.double( 1.0 ),
  eff_charge_cut_highY = cms.double( 1.0 ),
  eff_charge_cut_lowX = cms.double( 0.0 ),
  eff_charge_cut_lowY = cms.double( 0.0 ),
  size_cutX = cms.double( 3.0 ),
  size_cutY = cms.double( 3.0 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  inflate_errors = cms.bool( False ),
  inflate_all_errors_no_trk_angle = cms.bool( False ),
  NoTemplateErrorsWhenNoTrkAngles = cms.bool( False ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  IrradiationBiasCorrection = cms.bool( True ),
  DoCosmics = cms.bool( False ),
  isPhase2 = cms.bool( False ),
  SmallPitch = cms.bool( False ),
  ComponentName = cms.string( "hltESPPixelCPEGeneric" ),
  MagneticFieldRecord = cms.ESInputTag( "","" ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPPixelCPETemplateReco = cms.ESProducer( "PixelCPETemplateRecoESProducer",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( True ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  barrelTemplateID = cms.int32( 0 ),
  forwardTemplateID = cms.int32( 0 ),
  directoryWithTemplates = cms.int32( 0 ),
  speed = cms.int32( -2 ),
  UseClusterSplitter = cms.bool( False ),
  ComponentName = cms.string( "hltESPPixelCPETemplateReco" ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPPixelLessStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPPixelLessStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPPixelLessStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "hltESPPixelLessStepClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPPixelLessStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPPixelLessStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
fragment.hltESPPixelPairStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1.0E12 ),
  ComponentName = cms.string( "hltESPPixelPairStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPPixelPairStepChi2MeasurementEstimator25 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 25.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPPixelPairStepChi2MeasurementEstimator25" ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPPixelPairTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPPixelPairTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.19 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
fragment.hltESPRKTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPRKTrajectoryFitter" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPRKTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPRKTrajectorySmoother" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPRungeKuttaTrackerPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( True ),
  ptMin = cms.double( -1.0 )
)
fragment.hltESPSiPixelCablingSoA = cms.ESProducer( "SiPixelCablingSoAESProducer@alpaka",
  CablingMapLabel = cms.string( "" ),
  UseQualityInfo = cms.bool( False ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
fragment.hltESPSiPixelGainCalibrationForHLTSoA = cms.ESProducer( "SiPixelGainCalibrationForHLTSoAESProducer@alpaka",
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
fragment.hltESPSmartPropagator = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagator" ),
  TrackerPropagator = cms.string( "PropagatorWithMaterial" ),
  MuonPropagator = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Epsilon = cms.double( 5.0 )
)
fragment.hltESPSmartPropagatorAny = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagatorAny" ),
  TrackerPropagator = cms.string( "PropagatorWithMaterial" ),
  MuonPropagator = cms.string( "SteppingHelixPropagatorAny" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Epsilon = cms.double( 5.0 )
)
fragment.hltESPSmartPropagatorAnyOpposite = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
  TrackerPropagator = cms.string( "PropagatorWithMaterialOpposite" ),
  MuonPropagator = cms.string( "SteppingHelixPropagatorAny" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  Epsilon = cms.double( 5.0 )
)
fragment.hltESPSoftLeptonByDistance = cms.ESProducer( "LeptonTaggerByDistanceESProducer",
  distance = cms.double( 0.5 )
)
fragment.hltESPSteppingHelixPropagatorAlong = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
fragment.hltESPSteppingHelixPropagatorOpposite = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPSteppingHelixPropagatorOpposite" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
fragment.hltESPStripCPEfromTrackAngle = cms.ESProducer( "StripCPEESProducer",
  ComponentName = cms.string( "hltESPStripCPEfromTrackAngle" ),
  ComponentType = cms.string( "StripCPEfromTrackAngle" ),
  parameters = cms.PSet( 
    mTIB_P1 = cms.double( 0.202 ),
    maxChgOneMIP = cms.double( 6000.0 ),
    mTEC_P0 = cms.double( -1.885 ),
    mTOB_P1 = cms.double( 0.253 ),
    mTEC_P1 = cms.double( 0.471 ),
    mLC_P2 = cms.double( 0.3 ),
    mLC_P1 = cms.double( 0.618 ),
    mTOB_P0 = cms.double( -1.026 ),
    mLC_P0 = cms.double( -0.326 ),
    useLegacyError = cms.bool( False ),
    mTIB_P0 = cms.double( -0.742 ),
    mTID_P1 = cms.double( 0.433 ),
    mTID_P0 = cms.double( -1.427 )
  )
)
fragment.hltESPTTRHBWithTrackAngle = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBWithTrackAngle" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPTTRHBuilderAngleAndTemplate = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderAngleAndTemplate" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  PixelCPE = cms.string( "hltESPPixelCPETemplateReco" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPTTRHBuilderPixelOnly = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderPixelOnly" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "Fake" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPTTRHBuilderWithoutAngle4PixelTriplets = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderWithoutAngle4PixelTriplets" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "Fake" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPTobTecStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPTobTecStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPTobTecStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "hltESPTobTecStepClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPTobTecStepFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFitterSmoother" ),
  Fitter = cms.string( "hltESPTobTecStepRKFitter" ),
  Smoother = cms.string( "hltESPTobTecStepRKSmoother" ),
  EstimateCut = cms.double( 30.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 7 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPTobTecStepFittingSmootherForLoopers = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFitterSmootherForLoopers" ),
  Fitter = cms.string( "hltESPTobTecStepRKFitterForLoopers" ),
  Smoother = cms.string( "hltESPTobTecStepRKSmootherForLoopers" ),
  EstimateCut = cms.double( 30.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 7 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPTobTecStepFlexibleKFFittingSmoother = cms.ESProducer( "FlexibleKFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFlexibleKFFittingSmoother" ),
  standardFitter = cms.string( "hltESPTobTecStepFitterSmoother" ),
  looperFitter = cms.string( "hltESPTobTecStepFitterSmootherForLoopers" ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPTobTecStepRKTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKFitter" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPTobTecStepRKTrajectoryFitterForLoopers = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKFitterForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPTobTecStepRKTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKSmoother" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPTobTecStepRKTrajectorySmootherForLoopers = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKSmootherForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPTobTecStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTobTecStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.09 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
fragment.hltESPTrackAlgoPriorityOrder = cms.ESProducer( "TrackAlgoPriorityOrderESProducer",
  ComponentName = cms.string( "hltESPTrackAlgoPriorityOrder" ),
  algoOrder = cms.vstring(  ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPTrackSelectionTfCKF = cms.ESProducer( "TfGraphDefProducer",
  ComponentName = cms.string( "hltESPTrackSelectionTfCKF" ),
  FileName = cms.FileInPath( "RecoTracker/FinalTrackSelectors/data/TrackTfClassifier/CKF_Run3_12_5_0_pre5.pb" ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.5 ),
  ValidHitBonus = cms.double( 100.0 ),
  MissingHitPenalty = cms.double( 0.0 ),
  allowSharedFirstHit = cms.bool( False )
)
fragment.hltESPTrajectoryFitterRK = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTrajectoryFitterRK" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltESPTrajectorySmootherRK = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTrajectorySmootherRK" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltOnlineBeamSpotESProducer = cms.ESProducer( "OnlineBeamSpotESProducer",
  timeThreshold = cms.int32( 48 ),
  sigmaZThreshold = cms.double( 2.0 ),
  sigmaXYThreshold = cms.double( 4.0 ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltPixelTracksCleanerBySharedHits = cms.ESProducer( "PixelTrackCleanerBySharedHitsESProducer",
  ComponentName = cms.string( "hltPixelTracksCleanerBySharedHits" ),
  useQuadrupletAlgo = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
fragment.hltTrackCleaner = cms.ESProducer( "TrackCleanerESProducer",
  ComponentName = cms.string( "hltTrackCleaner" ),
  appendToDataLabel = cms.string( "" )
)
fragment.hoDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "HODetIdAssociator" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 30 ),
  nPhi = cms.int32( 72 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
fragment.multipleScatteringParametrisationMakerESProducer = cms.ESProducer( "MultipleScatteringParametrisationMakerESProducer",
  appendToDataLabel = cms.string( "" )
)
fragment.muonDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "MuonDetIdAssociator" ),
  etaBinSize = cms.double( 0.125 ),
  nEta = cms.int32( 48 ),
  nPhi = cms.int32( 48 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( True ),
  includeGEM = cms.bool( True ),
  includeME0 = cms.bool( False )
)
fragment.muonSeededTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "muonSeededTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.1 ),
  ValidHitBonus = cms.double( 1000.0 ),
  MissingHitPenalty = cms.double( 1.0 ),
  allowSharedFirstHit = cms.bool( True )
)
fragment.navigationSchoolESProducer = cms.ESProducer( "NavigationSchoolESProducer",
  ComponentName = cms.string( "SimpleNavigationSchool" ),
  PluginName = cms.string( "" ),
  SimpleMagneticField = cms.string( "ParabolicMf" )
)
fragment.preshowerDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "PreshowerDetIdAssociator" ),
  etaBinSize = cms.double( 0.1 ),
  nEta = cms.int32( 60 ),
  nPhi = cms.int32( 30 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
fragment.siPixelGainCalibrationForHLTGPU = cms.ESProducer( "SiPixelGainCalibrationForHLTGPUESProducer",
  appendToDataLabel = cms.string( "" )
)
fragment.siPixelROCsStatusAndMappingWrapperESProducer = cms.ESProducer( "SiPixelROCsStatusAndMappingWrapperESProducer",
  ComponentName = cms.string( "" ),
  CablingMapLabel = cms.string( "" ),
  UseQualityInfo = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
fragment.siPixelTemplateDBObjectESProducer = cms.ESProducer( "SiPixelTemplateDBObjectESProducer" )
fragment.siStripBackPlaneCorrectionDepESProducer = cms.ESProducer( "SiStripBackPlaneCorrectionDepESProducer",
  LatencyRecord = cms.PSet( 
    label = cms.untracked.string( "" ),
    record = cms.string( "SiStripLatencyRcd" )
  ),
  BackPlaneCorrectionPeakMode = cms.PSet( 
    label = cms.untracked.string( "peak" ),
    record = cms.string( "SiStripBackPlaneCorrectionRcd" )
  ),
  BackPlaneCorrectionDeconvMode = cms.PSet( 
    label = cms.untracked.string( "deconvolution" ),
    record = cms.string( "SiStripBackPlaneCorrectionRcd" )
  )
)
fragment.siStripLorentzAngleDepESProducer = cms.ESProducer( "SiStripLorentzAngleDepESProducer",
  LatencyRecord = cms.PSet( 
    label = cms.untracked.string( "" ),
    record = cms.string( "SiStripLatencyRcd" )
  ),
  LorentzAnglePeakMode = cms.PSet( 
    label = cms.untracked.string( "peak" ),
    record = cms.string( "SiStripLorentzAngleRcd" )
  ),
  LorentzAngleDeconvMode = cms.PSet( 
    label = cms.untracked.string( "deconvolution" ),
    record = cms.string( "SiStripLorentzAngleRcd" )
  )
)
fragment.zdcTopologyEP = cms.ESProducer( "ZdcTopologyEP",
  appendToDataLabel = cms.string( "" )
)

fragment.hltTriggerType = cms.EDFilter( "HLTTriggerTypeFilter",
    SelectedTriggerType = cms.int32( 1 )
)
fragment.hltGtStage2Digis = cms.EDProducer( "L1TRawToDigi",
    FedIds = cms.vint32( 1404 ),
    Setup = cms.string( "stage2::GTSetup" ),
    FWId = cms.uint32( 0 ),
    DmxFWId = cms.uint32( 0 ),
    FWOverride = cms.bool( False ),
    TMTCheck = cms.bool( True ),
    CTP7 = cms.untracked.bool( False ),
    MTF7 = cms.untracked.bool( False ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    lenSlinkHeader = cms.untracked.int32( 8 ),
    lenSlinkTrailer = cms.untracked.int32( 8 ),
    lenAMCHeader = cms.untracked.int32( 8 ),
    lenAMCTrailer = cms.untracked.int32( 0 ),
    lenAMC13Header = cms.untracked.int32( 8 ),
    lenAMC13Trailer = cms.untracked.int32( 8 ),
    debug = cms.untracked.bool( False ),
    MinFeds = cms.uint32( 0 )
)
fragment.hltGtStage2ObjectMap = cms.EDProducer( "L1TGlobalProducer",
    MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' ),
    CICADAInputTag = cms.InputTag( 'hltGtStage2Digis','CICADAScore' ),
    ExtInputTag = cms.InputTag( "hltGtStage2Digis" ),
    AlgoBlkInputTag = cms.InputTag( "hltGtStage2Digis" ),
    GetPrescaleColumnFromData = cms.bool( False ),
    AlgorithmTriggersUnprescaled = cms.bool( True ),
    RequireMenuToMatchAlgoBlkInput = cms.bool( True ),
    AlgorithmTriggersUnmasked = cms.bool( True ),
    useMuonShowers = cms.bool( True ),
    produceAXOL1TLScore = cms.bool( False ),
    resetPSCountersEachLumiSec = cms.bool( True ),
    semiRandomInitialPSCounters = cms.bool( False ),
    ProduceL1GtDaqRecord = cms.bool( True ),
    ProduceL1GtObjectMapRecord = cms.bool( True ),
    EmulateBxInEvent = cms.int32( 1 ),
    L1DataBxInEvent = cms.int32( 5 ),
    AlternativeNrBxBoardDaq = cms.uint32( 0 ),
    BstLengthBytes = cms.int32( -1 ),
    PrescaleSet = cms.uint32( 1 ),
    Verbosity = cms.untracked.int32( 0 ),
    PrintL1Menu = cms.untracked.bool( False ),
    TriggerMenuLuminosity = cms.string( "startup" )
)
fragment.hltOnlineMetaDataDigis = cms.EDProducer( "OnlineMetaDataRawToDigi",
    onlineMetaDataInputLabel = cms.InputTag( "rawDataCollector" )
)
fragment.hltOnlineBeamSpot = cms.EDProducer( "BeamSpotOnlineProducer",
    changeToCMSCoordinates = cms.bool( False ),
    maxZ = cms.double( 40.0 ),
    setSigmaZ = cms.double( 0.0 ),
    beamMode = cms.untracked.uint32( 11 ),
    src = cms.InputTag( "" ),
    gtEvmLabel = cms.InputTag( "" ),
    maxRadius = cms.double( 2.0 ),
    useTransientRecord = cms.bool( True )
)
fragment.hltPreMCReducedIterativeTracking = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
fragment.hltOnlineBeamSpotDevice = cms.EDProducer( "BeamSpotDeviceProducer@alpaka",
    src = cms.InputTag( "hltOnlineBeamSpot" ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
fragment.hltSiPixelClustersSoA = cms.EDProducer( "SiPixelRawToClusterPhase1@alpaka",
    IncludeErrors = cms.bool( True ),
    UseQualityInfo = cms.bool( False ),
    clusterThreshold_layer1 = cms.int32( 4000 ),
    clusterThreshold_otherLayers = cms.int32( 4000 ),
    VCaltoElectronGain = cms.double( 1.0 ),
    VCaltoElectronGain_L1 = cms.double( 1.0 ),
    VCaltoElectronOffset = cms.double( 0.0 ),
    VCaltoElectronOffset_L1 = cms.double( 0.0 ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    Regions = cms.PSet(  ),
    CablingMapLabel = cms.string( "" ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
fragment.hltSiPixelClusters = cms.EDProducer( "SiPixelDigisClustersFromSoAAlpakaPhase1",
    src = cms.InputTag( "hltSiPixelClustersSoA" ),
    clusterThreshold_layer1 = cms.int32( 4000 ),
    clusterThreshold_otherLayers = cms.int32( 4000 ),
    produceDigis = cms.bool( False ),
    storeDigis = cms.bool( False )
)
fragment.hltSiPixelDigiErrors = cms.EDProducer( "SiPixelDigiErrorsFromSoAAlpaka",
    digiErrorSoASrc = cms.InputTag( "hltSiPixelClustersSoA" ),
    fmtErrorsSoASrc = cms.InputTag( "hltSiPixelClustersSoA" ),
    CablingMapLabel = cms.string( "" ),
    UsePhase1 = cms.bool( True ),
    ErrorList = cms.vint32( 29 ),
    UserErrorList = cms.vint32( 40 )
)
fragment.hltSiPixelRecHitsSoA = cms.EDProducer( "SiPixelRecHitAlpakaPhase1@alpaka",
    beamSpot = cms.InputTag( "hltOnlineBeamSpotDevice" ),
    src = cms.InputTag( "hltSiPixelClustersSoA" ),
    CPE = cms.string( "PixelCPEFastParams" ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
fragment.hltSiPixelRecHits = cms.EDProducer( "SiPixelRecHitFromSoAAlpakaPhase1",
    pixelRecHitSrc = cms.InputTag( "hltSiPixelRecHitsSoA" ),
    src = cms.InputTag( "hltSiPixelClusters" )
)
fragment.hltPixelTracksSoA = cms.EDProducer( "CAHitNtupletAlpakaPhase1@alpaka",
    pixelRecHitSrc = cms.InputTag( "hltSiPixelRecHitsSoA" ),
    CPE = cms.string( "PixelCPEFastParams" ),
    ptmin = cms.double( 0.9 ),
    CAThetaCutBarrel = cms.double( 0.002 ),
    CAThetaCutForward = cms.double( 0.003 ),
    hardCurvCut = cms.double( 0.0328407225 ),
    dcaCutInnerTriplet = cms.double( 0.15 ),
    dcaCutOuterTriplet = cms.double( 0.25 ),
    earlyFishbone = cms.bool( True ),
    lateFishbone = cms.bool( False ),
    fillStatistics = cms.bool( False ),
    minHitsPerNtuplet = cms.uint32( 3 ),
    minHitsForSharingCut = cms.uint32( 10 ),
    fitNas4 = cms.bool( False ),
    doClusterCut = cms.bool( True ),
    doZ0Cut = cms.bool( True ),
    doPtCut = cms.bool( True ),
    useRiemannFit = cms.bool( False ),
    doSharedHitCut = cms.bool( True ),
    dupPassThrough = cms.bool( False ),
    useSimpleTripletCleaner = cms.bool( True ),
    maxNumberOfDoublets = cms.uint32( 524288 ),
    idealConditions = cms.bool( False ),
    includeJumpingForwardDoublets = cms.bool( True ),
    cellZ0Cut = cms.double( 12.0 ),
    cellPtCut = cms.double( 0.5 ),
    trackQualityCuts = cms.PSet( 
      chi2MaxPt = cms.double( 10.0 ),
      tripletMaxTip = cms.double( 0.3 ),
      chi2Scale = cms.double( 8.0 ),
      quadrupletMaxTip = cms.double( 0.5 ),
      quadrupletMinPt = cms.double( 0.3 ),
      quadrupletMaxZip = cms.double( 12.0 ),
      tripletMaxZip = cms.double( 12.0 ),
      tripletMinPt = cms.double( 0.5 ),
      chi2Coeff = cms.vdouble( 0.9, 1.8 )
    ),
    phiCuts = cms.vint32( 522, 730, 730, 522, 626, 626, 522, 522, 626, 626, 626, 522, 522, 522, 522, 522, 522, 522, 522 ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
fragment.hltPixelTracks = cms.EDProducer( "PixelTrackProducerFromSoAAlpakaPhase1",
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    trackSrc = cms.InputTag( "hltPixelTracksSoA" ),
    pixelRecHitLegacySrc = cms.InputTag( "hltSiPixelRecHits" ),
    minNumberOfHits = cms.int32( 0 ),
    minQuality = cms.string( "loose" )
)
fragment.hltPixelVerticesSoA = cms.EDProducer( "PixelVertexProducerAlpakaPhase1@alpaka",
    oneKernel = cms.bool( True ),
    useDensity = cms.bool( True ),
    useDBSCAN = cms.bool( False ),
    useIterative = cms.bool( False ),
    doSplitting = cms.bool( True ),
    minT = cms.int32( 2 ),
    eps = cms.double( 0.07 ),
    errmax = cms.double( 0.01 ),
    chi2max = cms.double( 9.0 ),
    PtMin = cms.double( 0.5 ),
    PtMax = cms.double( 75.0 ),
    pixelTrackSrc = cms.InputTag( "hltPixelTracksSoA" ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
fragment.hltPixelVertices = cms.EDProducer( "PixelVertexProducerFromSoAAlpaka",
    TrackCollection = cms.InputTag( "hltPixelTracks" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    src = cms.InputTag( "hltPixelVerticesSoA" )
)
fragment.hltTrimmedPixelVertices = cms.EDProducer( "PixelVertexCollectionTrimmer",
    src = cms.InputTag( "hltPixelVertices" ),
    maxVtx = cms.uint32( 100 ),
    fractionSumPt2 = cms.double( 0.3 ),
    minSumPt2 = cms.double( 0.0 ),
    PVcomparer = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPvClusterComparerForIT" ) )
)
fragment.hltSiStripExcludedFEDListProducer = cms.EDProducer( "SiStripExcludedFEDListProducer",
    ProductLabel = cms.InputTag( "rawDataCollector" )
)
fragment.hltSiStripRawToClustersFacility = cms.EDProducer( "SiStripClusterizerFromRaw",
    ProductLabel = cms.InputTag( "rawDataCollector" ),
    ConditionsLabel = cms.string( "" ),
    onDemand = cms.bool( True ),
    DoAPVEmulatorCheck = cms.bool( False ),
    LegacyUnpacker = cms.bool( False ),
    HybridZeroSuppressed = cms.bool( False ),
    Clusterizer = cms.PSet( 
      ConditionsLabel = cms.string( "" ),
      ClusterThreshold = cms.double( 5.0 ),
      SeedThreshold = cms.double( 3.0 ),
      Algorithm = cms.string( "ThreeThresholdAlgorithm" ),
      ChannelThreshold = cms.double( 2.0 ),
      MaxAdjacentBad = cms.uint32( 0 ),
      setDetId = cms.bool( True ),
      MaxSequentialHoles = cms.uint32( 0 ),
      RemoveApvShots = cms.bool( True ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
      MaxSequentialBad = cms.uint32( 1 )
    ),
    Algorithms = cms.PSet( 
      Use10bitsTruncation = cms.bool( False ),
      CommonModeNoiseSubtractionMode = cms.string( "Median" ),
      useCMMeanMap = cms.bool( False ),
      TruncateInSuppressor = cms.bool( True ),
      doAPVRestore = cms.bool( False ),
      SiStripFedZeroSuppressionMode = cms.uint32( 4 ),
      PedestalSubtractionFedMode = cms.bool( True )
    )
)
fragment.hltMeasurementTrackerEvent = cms.EDProducer( "MeasurementTrackerEventProducer",
    measurementTracker = cms.string( "hltESPMeasurementTracker" ),
    skipClusters = cms.InputTag( "" ),
    pixelClusterProducer = cms.string( "hltSiPixelClusters" ),
    stripClusterProducer = cms.string( "hltSiStripRawToClustersFacility" ),
    Phase2TrackerCluster1DProducer = cms.string( "" ),
    vectorHits = cms.InputTag( "" ),
    vectorHitsRej = cms.InputTag( "" ),
    inactivePixelDetectorLabels = cms.VInputTag( 'hltSiPixelDigiErrors' ),
    badPixelFEDChannelCollectionLabels = cms.VInputTag( 'hltSiPixelDigiErrors' ),
    pixelCablingMapLabel = cms.string( "" ),
    inactiveStripDetectorLabels = cms.VInputTag( 'hltSiStripExcludedFEDListProducer' ),
    switchOffPixelsIfEmpty = cms.bool( True )
)
fragment.hltIter0PFLowPixelSeedsFromPixelTracks = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag( "hltPixelTracks" ),
    InputVertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
    originHalfLength = cms.double( 0.3 ),
    originRadius = cms.double( 0.1 ),
    useProtoTrackKinematics = cms.bool( False ),
    useEventsWithNoVertex = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    usePV = cms.bool( False ),
    includeFourthHit = cms.bool( True ),
    produceComplement = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) )
)
fragment.hltIter0PFlowCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltIter0PFLowPixelSeedsFromPixelTracks" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter0GroupedCkfTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
fragment.hltIter0PFlowCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltIter0PFlowCkfTrackCandidates" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIter0" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
fragment.hltIter0PFlowTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter0PFlowCtfWithMaterialTracks" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    ignoreVertices = cms.bool( False ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 0.6, 0.6 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 0.8, 0.8 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 0.75, 0.75 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 0.5, 0.5 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    )
)
fragment.hltIter0PFlowTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltIter0PFlowCtfWithMaterialTracks" ),
    originalMVAVals = cms.InputTag( 'hltIter0PFlowTrackCutClassifier','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltIter0PFlowTrackCutClassifier','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
fragment.hltDoubletRecoveryClustersRefRemoval = cms.EDProducer( "TrackClusterRemover",
    trajectories = cms.InputTag( "hltIter0PFlowTrackSelectionHighPurity" ),
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    oldClusterRemovalInfo = cms.InputTag( "" ),
    TrackQuality = cms.string( "highPurity" ),
    maxChi2 = cms.double( 16.0 ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    overrideTrkQuals = cms.InputTag( "" )
)
fragment.hltDoubletRecoveryMaskedMeasurementTrackerEvent = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    src = cms.InputTag( "hltMeasurementTrackerEvent" ),
    OnDemand = cms.bool( False ),
    clustersToSkip = cms.InputTag( "hltDoubletRecoveryClustersRefRemoval" )
)
fragment.hltDoubletRecoveryPixelLayersAndRegions = cms.EDProducer( "PixelInactiveAreaTrackingRegionsSeedingLayersProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 15.0 ),
      extraPhi = cms.double( 0.0 ),
      extraEta = cms.double( 0.0 ),
      maxNVertices = cms.int32( 3 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 1.2 ),
      operationMode = cms.string( "VerticesFixed" ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "ForSiStrips" ),
      originRadius = cms.double( 0.015 ),
      measurementTrackerName = cms.InputTag( "hltDoubletRecoveryMaskedMeasurementTrackerEvent" ),
      precise = cms.bool( True ),
      zErrorVertex = cms.double( 0.03 )
    ),
    inactivePixelDetectorLabels = cms.VInputTag( 'hltSiPixelDigiErrors' ),
    badPixelFEDChannelCollectionLabels = cms.VInputTag( 'hltSiPixelDigiErrors' ),
    ignoreSingleFPixPanelModules = cms.bool( True ),
    debug = cms.untracked.bool( False ),
    createPlottingFiles = cms.untracked.bool( False ),
    layerList = cms.vstring( 'BPix1+BPix2',
      'BPix2+FPix1_pos',
      'BPix2+FPix1_neg',
      'FPix1_pos+FPix2_pos',
      'FPix1_neg+FPix2_neg',
      'BPix1+FPix2_neg',
      'BPix2+FPix2_neg',
      'FPix2_neg+FPix3_neg',
      'BPix2+BPix3' ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltDoubletRecoveryClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltDoubletRecoveryClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    MTID = cms.PSet(  ),
    MTOB = cms.PSet(  ),
    MTEC = cms.PSet(  )
)
fragment.hltDoubletRecoveryPFlowPixelClusterCheck = cms.EDProducer( "ClusterCheckerEDProducer",
    doClusterCheck = cms.bool( False ),
    MaxNumberOfStripClusters = cms.uint32( 50000 ),
    ClusterCollectionLabel = cms.InputTag( "hltMeasurementTrackerEvent" ),
    MaxNumberOfPixelClusters = cms.uint32( 40000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False )
)
fragment.hltDoubletRecoveryPFlowPixelHitDoublets = cms.EDProducer( "HitPairEDProducer",
    seedingLayers = cms.InputTag( "" ),
    trackingRegions = cms.InputTag( "" ),
    trackingRegionsSeedingLayers = cms.InputTag( "hltDoubletRecoveryPixelLayersAndRegions" ),
    clusterCheck = cms.InputTag( "hltDoubletRecoveryPFlowPixelClusterCheck" ),
    produceSeedingHitSets = cms.bool( True ),
    produceIntermediateHitDoublets = cms.bool( False ),
    maxElement = cms.uint32( 0 ),
    maxElementTotal = cms.uint32( 50000000 ),
    putEmptyIfMaxElementReached = cms.bool( False ),
    layerPairs = cms.vuint32( 0 )
)
fragment.hltDoubletRecoveryPFlowPixelSeeds = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    seedingHitSets = cms.InputTag( "hltDoubletRecoveryPFlowPixelHitDoublets" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    MinOneOverPtError = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    magneticField = cms.string( "ParabolicMf" ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) )
)
fragment.hltDoubletRecoveryPFlowCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltDoubletRecoveryMaskedMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltDoubletRecoveryPFlowPixelSeeds" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter2GroupedCkfTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
fragment.hltDoubletRecoveryPFlowCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltDoubletRecoveryPFlowCkfTrackCandidates" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltDoubletRecovery" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltDoubletRecoveryMaskedMeasurementTrackerEvent" )
)
fragment.hltDoubletRecoveryPFlowTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltDoubletRecoveryPFlowCtfWithMaterialTracks" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    ignoreVertices = cms.bool( False ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 0.3, 0.3 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 0.35, 0.35 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    )
)
fragment.hltDoubletRecoveryPFlowTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltDoubletRecoveryPFlowCtfWithMaterialTracks" ),
    originalMVAVals = cms.InputTag( 'hltDoubletRecoveryPFlowTrackCutClassifier','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltDoubletRecoveryPFlowTrackCutClassifier','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
fragment.hltMergedTracks = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltIter0PFlowTrackSelectionHighPurity','hltDoubletRecoveryPFlowTrackSelectionHighPurity' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter0PFlowTrackSelectionHighPurity','hltDoubletRecoveryPFlowTrackSelectionHighPurity' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
fragment.hltBoolEnd = cms.EDFilter( "HLTBool",
    result = cms.bool( True )
)

fragment.HLTL1UnpackerSequence = cms.Sequence( fragment.hltGtStage2Digis + fragment.hltGtStage2ObjectMap )
fragment.HLTBeamSpot = cms.Sequence( fragment.hltOnlineMetaDataDigis + fragment.hltOnlineBeamSpot )
fragment.HLTBeginSequence = cms.Sequence( fragment.hltTriggerType + fragment.HLTL1UnpackerSequence + fragment.HLTBeamSpot )
fragment.HLTDoLocalPixelSequence = cms.Sequence( fragment.hltOnlineBeamSpotDevice + fragment.hltSiPixelClustersSoA + fragment.hltSiPixelClusters + fragment.hltSiPixelDigiErrors + fragment.hltSiPixelRecHitsSoA + fragment.hltSiPixelRecHits )
fragment.HLTRecoPixelTracksSequence = cms.Sequence( fragment.hltPixelTracksSoA + fragment.hltPixelTracks )
fragment.HLTRecopixelvertexingSequence = cms.Sequence( fragment.HLTRecoPixelTracksSequence + fragment.hltPixelVerticesSoA + fragment.hltPixelVertices + fragment.hltTrimmedPixelVertices )
fragment.HLTDoLocalStripSequence = cms.Sequence( fragment.hltSiStripExcludedFEDListProducer + fragment.hltSiStripRawToClustersFacility + fragment.hltMeasurementTrackerEvent )
fragment.HLTIterativeTrackingIteration0 = cms.Sequence( fragment.hltIter0PFLowPixelSeedsFromPixelTracks + fragment.hltIter0PFlowCkfTrackCandidates + fragment.hltIter0PFlowCtfWithMaterialTracks + fragment.hltIter0PFlowTrackCutClassifier + fragment.hltIter0PFlowTrackSelectionHighPurity )
fragment.HLTIterativeTrackingDoubletRecovery = cms.Sequence( fragment.hltDoubletRecoveryClustersRefRemoval + fragment.hltDoubletRecoveryMaskedMeasurementTrackerEvent + fragment.hltDoubletRecoveryPixelLayersAndRegions + fragment.hltDoubletRecoveryPFlowPixelClusterCheck + fragment.hltDoubletRecoveryPFlowPixelHitDoublets + fragment.hltDoubletRecoveryPFlowPixelSeeds + fragment.hltDoubletRecoveryPFlowCkfTrackCandidates + fragment.hltDoubletRecoveryPFlowCtfWithMaterialTracks + fragment.hltDoubletRecoveryPFlowTrackCutClassifier + fragment.hltDoubletRecoveryPFlowTrackSelectionHighPurity )
fragment.HLTIterativeTrackingIter02 = cms.Sequence( fragment.HLTIterativeTrackingIteration0 + fragment.HLTIterativeTrackingDoubletRecovery + fragment.hltMergedTracks )
fragment.HLTEndSequence = cms.Sequence( fragment.hltBoolEnd )

fragment.MC_ReducedIterativeTracking_v22 = cms.Path( fragment.HLTBeginSequence + fragment.hltPreMCReducedIterativeTracking + fragment.HLTDoLocalPixelSequence + fragment.HLTRecopixelvertexingSequence + fragment.HLTDoLocalStripSequence + fragment.HLTIterativeTrackingIter02 + fragment.HLTEndSequence )


fragment.schedule = cms.Schedule( *(fragment.MC_ReducedIterativeTracking_v22, ))


# run the Full L1T emulator, then repack the data into a new RAW collection, to be used by the HLT
from HLTrigger.Configuration.CustomConfigs import L1REPACK
fragment = L1REPACK(fragment,"uGT")

# dummify hltGetConditions in cff's
if 'hltGetConditions' in fragment.__dict__ and 'HLTriggerFirstPath' in fragment.__dict__ :
    fragment.hltDummyConditions = cms.EDFilter( "HLTBool",
        result = cms.bool( True )
    )
    fragment.HLTriggerFirstPath.replace(fragment.hltGetConditions,fragment.hltDummyConditions)

# add specific customizations
from HLTrigger.Configuration.customizeHLTforALL import customizeHLTforAll
fragment = customizeHLTforAll(fragment,"GRun")

from HLTrigger.Configuration.customizeHLTforCMSSW import customizeHLTforCMSSW
fragment = customizeHLTforCMSSW(fragment,"GRun")

# Eras-based customisations
from HLTrigger.Configuration.Eras import modifyHLTforEras
modifyHLTforEras(fragment)

